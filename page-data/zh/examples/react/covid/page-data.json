{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/zh/examples/react/covid","result":{"data":{"site":{"siteMetadata":{"title":"L7","galleryMenuCloseAll":false,"examples":[{"slug":"gallery","icon":"gallery","title":{"zh":"官方精品库","en":"Featured"}},{"slug":"react","icon":"map","title":{"zh":"React 组件","en":"React Demo"}},{"slug":"district","icon":"map","title":{"zh":"行政区划","en":"L7 District"}},{"slug":"draw","icon":"map","title":{"zh":"绘制组件","en":"L7 Draw"}},{"slug":"point","icon":"point","title":{"zh":"点图层","en":"Point Layer"}},{"slug":"line","icon":"line","title":{"zh":"线图层","en":"Line Layer"}},{"slug":"polygon","icon":"polygon","title":{"zh":"面图层","en":"Polygon Layer"}},{"slug":"heatmap","icon":"heatmap","title":{"zh":"热力图","en":"HeatMap Layer"}},{"slug":"raster","icon":"raster","title":{"zh":"栅格图层","en":"Raster Layer"}},{"slug":"tutorial","icon":"map","title":{"zh":"教程示例","en":"Tutorial demo"}}],"playground":{"container":"<div style=\"justify-content: center; position: relative\" id=\"map\"/>","playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":{"@antv/l7":"latest","@antv/l7-maps":"latest"},"htmlCodeTemplate":null}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/tutorial/map"},"frontmatter":{"title":"Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/map/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/tutorial/map"},"frontmatter":{"title":"地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/map/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/react/covid"},"frontmatter":{"title":"COVID-19（新冠肺炎）地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"react/covid/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/react/covid"},"frontmatter":{"title":"COVID-19 Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"react/covid/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/raster/basic"},"frontmatter":{"title":"Raster Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"raster/basic/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/raster/basic"},"frontmatter":{"title":"栅格图层","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"raster/basic/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/polygon/fill"},"frontmatter":{"title":"填充地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"polygon/fill/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/polygon/fill"},"frontmatter":{"title":"Choropleth Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"polygon/fill/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/polygon/3d"},"frontmatter":{"title":"Extrude Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"polygon/3d/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/polygon/3d"},"frontmatter":{"title":"3D填充图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"polygon/3d/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/bubble"},"frontmatter":{"title":"气泡地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/bubble/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/line/path"},"frontmatter":{"title":"路径地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/path/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/bubble"},"frontmatter":{"title":"Bubble Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/bubble/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/line/path"},"frontmatter":{"title":"Path Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/path/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/heatmap/heatmap"},"frontmatter":{"title":"HeatMap","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/heatmap/heatmap"},"frontmatter":{"title":"经典热力图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery/animate"},"frontmatter":{"title":"Animate","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/animate/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery/animate"},"frontmatter":{"title":"动画","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/animate/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/district/drill"},"frontmatter":{"title":"Drill Down","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"district/drill/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/district/bubble"},"frontmatter":{"title":"Bubbled","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"district/bubble/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/district/basic"},"frontmatter":{"title":"L7 District","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"district/basic/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/react/scene"},"frontmatter":{"title":"Scene Component","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"react/scene/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/react/scene"},"frontmatter":{"title":"Scene 组件","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"react/scene/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/text"},"frontmatter":{"title":"label","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/text/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/point/scatter"},"frontmatter":{"title":"Scatter Map","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/scatter"},"frontmatter":{"title":"散点地图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/text"},"frontmatter":{"title":"文本标注","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/text/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/dot"},"frontmatter":{"title":"亮度图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/dot/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/cluster"},"frontmatter":{"title":"聚合图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/cluster/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/cluster"},"frontmatter":{"title":"Cluster Map","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/cluster/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/line/arc"},"frontmatter":{"title":"弧线地图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/arc/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/line/arc"},"frontmatter":{"title":"Arc Line Map","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/arc/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/line/animate"},"frontmatter":{"title":"线动画","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/animate/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/line/animate"},"frontmatter":{"title":"Line Animate","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/animate/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/heatmap/hexagon"},"frontmatter":{"title":"Hexagon Map","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/hexagon/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/heatmap/hexagon"},"frontmatter":{"title":"蜂窝热力图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/hexagon/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/heatmap/grid"},"frontmatter":{"title":"Grid Map","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/grid/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery/basic"},"frontmatter":{"title":"基础可视化","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/basic/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery/basic"},"frontmatter":{"title":"Featured","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/basic/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/heatmap/grid"},"frontmatter":{"title":"网格热力图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/grid/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/district/basic"},"frontmatter":{"title":"填充图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"district/basic/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/dot"},"frontmatter":{"title":"Dot Intensity","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/dot/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/tutorial/marker"},"frontmatter":{"title":"Marker","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/marker/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/tutorial/layer"},"frontmatter":{"title":"图层","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/layer/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/tutorial/control"},"frontmatter":{"title":"Control","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/control/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/tutorial/layer"},"frontmatter":{"title":"Layer","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/layer/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/tutorial/control"},"frontmatter":{"title":"组件","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/control/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/tutorial/marker"},"frontmatter":{"title":"Marker","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/marker/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/react/layer"},"frontmatter":{"title":"Layer Component","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"react/layer/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/react/layer"},"frontmatter":{"title":"Layer 组件","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"react/layer/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/image"},"frontmatter":{"title":"Symbol Map","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"point/image/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/image"},"frontmatter":{"title":"符号地图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"point/image/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/line/isoline"},"frontmatter":{"title":"等值线地图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/isoline/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/line/isoline"},"frontmatter":{"title":"Isoline Map","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/isoline/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/district/bubble"},"frontmatter":{"title":"气泡图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"district/bubble/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/react/control"},"frontmatter":{"title":"Control Component","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"react/control/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/react/control"},"frontmatter":{"title":"Control 组件","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"react/control/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/draw/basic"},"frontmatter":{"title":"L7 Draw","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"draw/basic/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/draw/UI"},"frontmatter":{"title":"UI 控件","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"draw/UI/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/draw/UI"},"frontmatter":{"title":"Draw Control","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"draw/UI/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/district/react"},"frontmatter":{"title":"React","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"district/react/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/draw/basic"},"frontmatter":{"title":"绘制组件","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"draw/basic/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/district/drill"},"frontmatter":{"title":"钻取地图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"district/drill/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/column"},"frontmatter":{"title":"3D 柱状地图","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"point/column/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/column"},"frontmatter":{"title":"Column Map","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"point/column/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/district/react"},"frontmatter":{"title":"React 组件","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"district/react/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/chart"},"frontmatter":{"title":"Chart Map","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"point/chart/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/chart"},"frontmatter":{"title":"复合图表地图","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"point/chart/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/marker"},"frontmatter":{"title":"Custom Marker","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"point/marker/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/marker"},"frontmatter":{"title":"自定义 Marker","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"point/marker/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/react/scene/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"react/scene/API.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/react/layer/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"react/layer/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/react/control/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"react/control/API.en.md"}}},{"node":{"fields":{"slug":"/en/examples/react/layer/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"react/layer/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/react/control/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"react/control/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/react/scene/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"react/scene/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/raster/basic/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"raster/basic/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/raster/basic/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"raster/basic/API.en.md"}}},{"node":{"fields":{"slug":"/en/examples/polygon/fill/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"polygon/fill/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/polygon/fill/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"polygon/fill/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/polygon/3d/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"polygon/3d/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/polygon/3d/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"polygon/3d/API.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/text/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/text/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/text/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/text/API.en.md"}}},{"node":{"fields":{"slug":"/en/examples/point/scatter/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/scatter/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/image/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/image/API.en.md"}}},{"node":{"fields":{"slug":"/en/examples/point/dot/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/dot/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/image/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/image/API.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/dot/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/dot/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/marker/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/marker/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/marker/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/marker/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/cluster/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/cluster/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/column/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/column/API.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/cluster/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/cluster/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/chart/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/chart/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/chart/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/chart/API.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/bubble/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/bubble/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/bubble/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/bubble/API.en.md"}}},{"node":{"fields":{"slug":"/en/examples/line/path/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"line/path/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/line/path/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"line/path/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/line/isoline/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"line/isoline/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/line/isoline/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"line/isoline/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/line/arc/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"line/arc/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/line/arc/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"line/arc/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/line/animate/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"line/animate/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/line/animate/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"line/animate/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/heatmap/hexagon/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/hexagon/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/heatmap/heatmap/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/heatmap/grid/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/grid/API.en.md"}}},{"node":{"fields":{"slug":"/en/examples/heatmap/heatmap/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/heatmap/grid/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/grid/API.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/heatmap/hexagon/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/hexagon/API.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/draw/basic/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"draw/basic/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/draw/basic/design"},"frontmatter":{"title":"introduction","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"draw/basic/design.en.md"}}},{"node":{"fields":{"slug":"/en/examples/draw/basic/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"draw/basic/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/draw/UI/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"draw/UI/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/draw/UI/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"draw/UI/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/district/drill/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"district/drill/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/district/drill/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"district/drill/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/district/bubble/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"district/bubble/API.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/draw/basic/design"},"frontmatter":{"title":"如何使用","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"draw/basic/design.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/district/basic/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"district/basic/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/district/basic/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"district/basic/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/district/bubble/API"},"frontmatter":{"title":"API","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"district/bubble/API.en.md"}}},{"node":{"fields":{"slug":"/en/examples/point/column/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"point/column/API.en.md"}}}]}},"pageContext":{"allDemos":[{"relativePath":"tutorial/marker/demo/amap.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/tutorial/marker/demo/amap.js","order":0,"filename":"amap.js","title":"添加默认Marker","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*Gzj7SYk-vdEAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Marker","order":1002},"zh":{"title":"Marker","order":1002}}},{"relativePath":"tutorial/marker/demo/mapbox.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/tutorial/marker/demo/mapbox.js","order":1,"filename":"mapbox.js","title":"MapBox底图组件","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*_SIYR50bbcoAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Marker","order":1002},"zh":{"title":"Marker","order":1002}}},{"relativePath":"tutorial/map/demo/amap.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/tutorial/map/demo/amap.js","order":0,"filename":"amap.js","title":"高德底图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*F0JPSoLcSesAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Map","order":1000},"zh":{"title":"地图","order":1000}}},{"relativePath":"tutorial/map/demo/amapInstance.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/tutorial/map/demo/amapInstance.js","order":2,"filename":"amapInstance.js","title":"通过高德地图实例化","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*C5d2RJ08hOkAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Map","order":1000},"zh":{"title":"地图","order":1000}}},{"relativePath":"tutorial/map/demo/mapbox.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/tutorial/map/demo/mapbox.js","order":1,"filename":"mapbox.js","title":"MapBox底图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*_SIYR50bbcoAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Map","order":1000},"zh":{"title":"地图","order":1000}}},{"relativePath":"tutorial/map/demo/amapInstance2d.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/tutorial/map/demo/amapInstance2d.js","order":3,"filename":"amapInstance2d.js","title":"通过高德地图实例化(2d)","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*C5d2RJ08hOkAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Map","order":1000},"zh":{"title":"地图","order":1000}}},{"relativePath":"tutorial/layer/demo/layer_highlight.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/tutorial/layer/demo/layer_highlight.js","order":0,"filename":"layer_highlight.js","title":"交互高亮图层","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*jBzZRp_umUoAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"图层","order":1002},"en":{"title":"Layer","order":1002}}},{"relativePath":"tutorial/control/demo/amap.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/tutorial/control/demo/amap.js","order":0,"filename":"amap.js","title":"高德底图组件","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*yXzQRYcGTyoAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Control","order":1002},"zh":{"title":"组件","order":1002}}},{"relativePath":"tutorial/control/demo/mapbox.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/tutorial/control/demo/mapbox.js","order":1,"filename":"mapbox.js","title":"MapBox底图组件","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*_SIYR50bbcoAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Control","order":1002},"zh":{"title":"组件","order":1002}}},{"relativePath":"react/scene/demo/amap.jsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/scene/demo/amap.jsx","order":0,"filename":"amap.jsx","title":"高德地图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*QrQkRKHte0YAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Scene Component","order":201},"zh":{"title":"Scene 组件","order":201}}},{"relativePath":"react/scene/demo/mapbox.jsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/scene/demo/mapbox.jsx","order":1,"filename":"mapbox.jsx","title":"Mapbox 地图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*_65gSYgf1DoAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Scene Component","order":201},"zh":{"title":"Scene 组件","order":201}}},{"relativePath":"react/layer/demo/marker.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/layer/demo/marker.tsx","order":1,"filename":"marker.tsx","title":"点标注图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*9sibTJP-FIMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Layer Component","order":202},"zh":{"title":"Layer 组件","order":202}}},{"relativePath":"react/layer/demo/Point_image.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/layer/demo/Point_image.tsx","order":0,"filename":"Point_image.tsx","title":"图片标注图","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*w-8iQpR1NEQAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Layer Component","order":202},"zh":{"title":"Layer 组件","order":202}}},{"relativePath":"react/layer/demo/popup.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/layer/demo/popup.tsx","order":2,"filename":"popup.tsx","title":"信息窗","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*RWngRL7rZKQAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Layer Component","order":202},"zh":{"title":"Layer 组件","order":202}}},{"relativePath":"react/covid/demo/covid_extrude.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/covid/demo/covid_extrude.tsx","order":5,"filename":"covid_extrude.tsx","title":"3D 填充图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*cuMmRqXzQu4AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"COVID-19（新冠肺炎）地图","order":200},"en":{"title":"COVID-19 Map","order":200}}},{"relativePath":"react/covid/demo/covid_animate.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/covid/demo/covid_animate.tsx","order":1,"filename":"covid_animate.tsx","title":"气泡动图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*4Er4Qo128bkAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"COVID-19（新冠肺炎）地图","order":200},"en":{"title":"COVID-19 Map","order":200}}},{"relativePath":"react/covid/demo/covid_grid.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/covid/demo/covid_grid.tsx","order":0,"filename":"covid_grid.tsx","title":"世界地图网格背景","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*CSUXTIYXXFwAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"COVID-19（新冠肺炎）地图","order":200},"en":{"title":"COVID-19 Map","order":200}}},{"relativePath":"react/covid/demo/covid_fill.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/covid/demo/covid_fill.tsx","order":2,"filename":"covid_fill.tsx","title":"填充图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*9lzaSrHuYx0AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"COVID-19（新冠肺炎）地图","order":200},"en":{"title":"COVID-19 Map","order":200}}},{"relativePath":"react/covid/demo/covid_bubble.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/covid/demo/covid_bubble.tsx","order":3,"filename":"covid_bubble.tsx","title":"气泡图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*mAWsSrM52gYAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"COVID-19（新冠肺炎）地图","order":200},"en":{"title":"COVID-19 Map","order":200}}},{"relativePath":"react/covid/demo/covid_column.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/covid/demo/covid_column.tsx","order":4,"filename":"covid_column.tsx","title":"3D柱图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*aLV4S6QJ104AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"COVID-19（新冠肺炎）地图","order":200},"en":{"title":"COVID-19 Map","order":200}}},{"relativePath":"react/control/demo/Marker.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/control/demo/Marker.tsx","order":0,"filename":"Marker.tsx","title":"Marker 组件","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*ocOWSKz2peAAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Control Component","order":203},"zh":{"title":"Control 组件","order":203}}},{"relativePath":"react/control/demo/control.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/control/demo/control.tsx","order":1,"filename":"control.tsx","title":"Control组件","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*_65gSYgf1DoAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Control Component","order":203},"zh":{"title":"Control 组件","order":203}}},{"relativePath":"raster/basic/demo/dem.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/raster/basic/demo/dem.js","order":1,"filename":"dem.js","title":"地形图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*oinmTJIlmbMAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Raster Map","order":900},"zh":{"title":"栅格图层","order":900}}},{"relativePath":"raster/basic/demo/image.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/raster/basic/demo/image.js","order":4,"filename":"image.js","title":"图片","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*ZrCaR53185IAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Raster Map","order":900},"zh":{"title":"栅格图层","order":900}}},{"relativePath":"raster/basic/demo/light.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/raster/basic/demo/light.js","order":2,"filename":"light.js","title":"夜光图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*bUYqRb5esH4AAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Raster Map","order":900},"zh":{"title":"栅格图层","order":900}}},{"relativePath":"raster/basic/demo/ndvi.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/raster/basic/demo/ndvi.js","order":3,"filename":"ndvi.js","title":"NDVI","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*6BQSTI51T_UAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Raster Map","order":900},"zh":{"title":"栅格图层","order":900}}},{"relativePath":"raster/basic/demo/radar.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/raster/basic/demo/radar.js","order":0,"filename":"radar.js","title":"雷达图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*ZiMnSZlmblIAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Raster Map","order":900},"zh":{"title":"栅格图层","order":900}}},{"relativePath":"polygon/fill/demo/province.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/polygon/fill/demo/province.js","order":0,"filename":"province.js","title":"中国地图省级","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*kZuyQ5LlfrAAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"填充地图","order":700},"en":{"title":"Choropleth Map","order":700}}},{"relativePath":"polygon/fill/demo/city.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/polygon/fill/demo/city.js","order":1,"filename":"city.js","title":"中国地图市级","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*GfGdRqWvJfAAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"填充地图","order":700},"en":{"title":"Choropleth Map","order":700}}},{"relativePath":"polygon/fill/demo/fill.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/polygon/fill/demo/fill.js","order":3,"filename":"fill.js","title":"连续填充图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*ouhFSJNcNvkAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"填充地图","order":700},"en":{"title":"Choropleth Map","order":700}}},{"relativePath":"polygon/fill/demo/usa.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/polygon/fill/demo/usa.js","order":2,"filename":"usa.js","title":"地图交互","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*HfZ7SKrS9fcAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"填充地图","order":700},"en":{"title":"Choropleth Map","order":700}}},{"relativePath":"polygon/3d/demo/polygon.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/polygon/3d/demo/polygon.js","order":0,"filename":"polygon.js","title":"3D 建筑面","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*RCaZSLthUn0AAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Extrude Map","order":700},"zh":{"title":"3D填充图","order":700}}},{"relativePath":"point/text/demo/iconfont.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/text/demo/iconfont.js","order":2,"filename":"iconfont.js","title":"图标标注","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*8PfqQ6-lQ0EAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"label","order":501},"zh":{"title":"文本标注","order":501}}},{"relativePath":"point/text/demo/iconfonts.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/text/demo/iconfonts.js","order":3,"filename":"iconfonts.js","title":"天气图标标注","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*JAhxTaabap4AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"label","order":501},"zh":{"title":"文本标注","order":501}}},{"relativePath":"point/text/demo/point_text.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/text/demo/point_text.js","order":0,"filename":"point_text.js","title":"点数据标注","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*7blvQ4v7Q1UAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"label","order":501},"zh":{"title":"文本标注","order":501}}},{"relativePath":"point/text/demo/temperture.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/text/demo/temperture.js","order":4,"filename":"temperture.js","title":"气温图标标注","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*36umQaf_hVEAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"label","order":501},"zh":{"title":"文本标注","order":501}}},{"relativePath":"point/text/demo/polygon_text.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/text/demo/polygon_text.js","order":1,"filename":"polygon_text.js","title":"面数据标注","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*rCFqRp3iQosAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"label","order":501},"zh":{"title":"文本标注","order":501}}},{"relativePath":"point/text/demo/updown.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/text/demo/updown.js","order":5,"filename":"updown.js","title":"走势图标标注","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*P5plS5ZsYZkAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"label","order":501},"zh":{"title":"文本标注","order":501}}},{"relativePath":"point/scatter/demo/animatePoint.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/scatter/demo/animatePoint.js","order":2,"filename":"animatePoint.js","title":"水波散点","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*BsEnTrJ5JRcAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Scatter Map","order":501},"zh":{"title":"散点地图","order":501}}},{"relativePath":"point/scatter/demo/dynamicScatter.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/scatter/demo/dynamicScatter.js","order":1,"filename":"dynamicScatter.js","title":"动态散点","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*iourTIHnDk0AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Scatter Map","order":501},"zh":{"title":"散点地图","order":501}}},{"relativePath":"point/scatter/demo/scatter.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/scatter/demo/scatter.js","order":0,"filename":"scatter.js","title":"散点图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*LnlmQ7sFWigAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Scatter Map","order":501},"zh":{"title":"散点地图","order":501}}},{"relativePath":"point/marker/demo/clustermarker.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/marker/demo/clustermarker.js","order":1,"filename":"clustermarker.js","title":"MarkerLayer 聚合Marker","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*2vBbRYT2bgIAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Custom Marker","order":507},"zh":{"title":"自定义 Marker","order":507}}},{"relativePath":"point/marker/demo/markerlayer.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/marker/demo/markerlayer.js","order":0,"filename":"markerlayer.js","title":"MarkerLayer 统一管理Marker","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*ng-FSqu67kYAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Custom Marker","order":507},"zh":{"title":"自定义 Marker","order":507}}},{"relativePath":"point/marker/demo/marker.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/marker/demo/marker.js","order":2,"filename":"marker.js","title":"温度","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*aTDtTL1qls0AAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Custom Marker","order":507},"zh":{"title":"自定义 Marker","order":507}}},{"relativePath":"point/image/demo/image.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/image/demo/image.js","order":0,"filename":"image.js","title":"符号图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*oVyHT5S3sv0AAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Symbol Map","order":502},"zh":{"title":"符号地图","order":502}}},{"relativePath":"point/image/demo/locate.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/image/demo/locate.js","order":1,"filename":"locate.js","title":"精确符号","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*DgoWS7-XKdUAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Symbol Map","order":502},"zh":{"title":"符号地图","order":502}}},{"relativePath":"point/image/demo/weather.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/image/demo/weather.js","order":2,"filename":"weather.js","title":"天气","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*-nk1RZJeGooAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Symbol Map","order":502},"zh":{"title":"符号地图","order":502}}},{"relativePath":"point/image/demo/road.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/image/demo/road.js","order":3,"filename":"road.js","title":"路线图","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*2HLeQ4AjxacAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Symbol Map","order":502},"zh":{"title":"符号地图","order":502}}},{"relativePath":"point/dot/demo/normal.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/dot/demo/normal.js","order":1,"filename":"normal.js","title":"海量点","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*xr8BQouXGvoAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"亮度图","order":501},"en":{"title":"Dot Intensity","order":501}}},{"relativePath":"point/dot/demo/normal2.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/dot/demo/normal2.js","order":0,"filename":"normal2.js","title":"城市亮度图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*ypZCT6pqv84AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"亮度图","order":501},"en":{"title":"Dot Intensity","order":501}}},{"relativePath":"point/column/demo/column_dark.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/column/demo/column_dark.js","order":2,"filename":"column_dark.js","title":"3D柱图_深色底图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*7COqR4wCc6QAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"3D 柱状地图","order":504},"en":{"title":"Column Map","order":504}}},{"relativePath":"point/column/demo/clumn_shape_light.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/column/demo/clumn_shape_light.js","order":1,"filename":"clumn_shape_light.js","title":"3D 浅色柱图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*RVw4QKTJe7kAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"3D 柱状地图","order":504},"en":{"title":"Column Map","order":504}}},{"relativePath":"point/column/demo/clumn_shape.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/column/demo/clumn_shape.js","order":3,"filename":"clumn_shape.js","title":"3D 深色柱图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*tvpvQZLv_xYAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"3D 柱状地图","order":504},"en":{"title":"Column Map","order":504}}},{"relativePath":"point/column/demo/column_light.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/column/demo/column_light.js","order":0,"filename":"column_light.js","title":"3D柱图_浅色底图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*kjvTRLNtckIAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"3D 柱状地图","order":504},"en":{"title":"Column Map","order":504}}},{"relativePath":"point/chart/demo/bar.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/chart/demo/bar.js","order":0,"filename":"bar.js","title":"柱图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*6AR6Qq0Bq-MAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Chart Map","order":506},"zh":{"title":"复合图表地图","order":506}}},{"relativePath":"point/cluster/demo/cluster.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/cluster/demo/cluster.js","order":0,"filename":"cluster.js","title":"聚合图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*paQsRKykjL4AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"聚合图","order":501},"en":{"title":"Cluster Map","order":501}}},{"relativePath":"point/chart/demo/chart.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/chart/demo/chart.js","order":1,"filename":"chart.js","title":"环图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*X06uT50Ll7QAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Chart Map","order":506},"zh":{"title":"复合图表地图","order":506}}},{"relativePath":"point/chart/demo/ring.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/chart/demo/ring.js","order":2,"filename":"ring.js","title":"环图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*-oG0T64BnZoAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Chart Map","order":506},"zh":{"title":"复合图表地图","order":506}}},{"relativePath":"point/bubble/demo/color.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/bubble/demo/color.js","order":1,"filename":"color.js","title":"形状映射","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*iN0nTYRDd3AAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"气泡地图","order":500},"en":{"title":"Bubble Map","order":500}}},{"relativePath":"point/bubble/demo/point.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/bubble/demo/point.js","order":0,"filename":"point.js","title":"气泡图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*fNGiS7YI1tIAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"气泡地图","order":500},"en":{"title":"Bubble Map","order":500}}},{"relativePath":"point/bubble/demo/scatter.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/bubble/demo/scatter.js","order":3,"filename":"scatter.js","title":"气泡图动画","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*L-wETZt7WHwAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"气泡地图","order":500},"en":{"title":"Bubble Map","order":500}}},{"relativePath":"point/bubble/demo/world.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/point/bubble/demo/world.js","order":2,"filename":"world.js","title":"气泡图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*v5j_QZEL-1YAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"气泡地图","order":500},"en":{"title":"Bubble Map","order":500}}},{"relativePath":"line/path/demo/bus_dark.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/path/demo/bus_dark.js","order":1,"filename":"bus_dark.js","title":"公交线路","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*j-P8RaJMEvAAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"路径地图","order":600},"en":{"title":"Path Map","order":600}}},{"relativePath":"line/path/demo/bus_light.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/path/demo/bus_light.js","order":0,"filename":"bus_light.js","title":"公交线路","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*YtfjQr5vRS4AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"路径地图","order":600},"en":{"title":"Path Map","order":600}}},{"relativePath":"line/path/demo/road_dark.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/path/demo/road_dark.js","order":3,"filename":"road_dark.js","title":"路径dark","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*DDjQRLEnwpoAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"路径地图","order":600},"en":{"title":"Path Map","order":600}}},{"relativePath":"line/path/demo/road_dark_dash.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/path/demo/road_dark_dash.js","order":5,"filename":"road_dark_dash.js","title":"路径虚线","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*cGw3T4LPx7YAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"路径地图","order":600},"en":{"title":"Path Map","order":600}}},{"relativePath":"line/path/demo/road_light.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/path/demo/road_light.js","order":2,"filename":"road_light.js","title":"路径light","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*LuXiTZAq_84AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"路径地图","order":600},"en":{"title":"Path Map","order":600}}},{"relativePath":"line/path/demo/road_red.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/path/demo/road_red.js","order":4,"filename":"road_red.js","title":"路径2d","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*1cF2RYwkcq8AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"路径地图","order":600},"en":{"title":"Path Map","order":600}}},{"relativePath":"line/isoline/demo/isoline.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/isoline/demo/isoline.js","order":2,"filename":"isoline.js","title":"等高线","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*RLvsSbS4PJMAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"等值线地图","order":602},"en":{"title":"Isoline Map","order":602}}},{"relativePath":"line/isoline/demo/ele_dark.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/isoline/demo/ele_dark.js","order":1,"filename":"ele_dark.js","title":"等高线","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*jJd0Qq_E3_UAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"等值线地图","order":602},"en":{"title":"Isoline Map","order":602}}},{"relativePath":"line/isoline/demo/ele.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/isoline/demo/ele.js","order":0,"filename":"ele.js","title":"等高线","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*p6LsTp3M144AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"等值线地图","order":602},"en":{"title":"Isoline Map","order":602}}},{"relativePath":"line/arc/demo/arcCircle.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/arc/demo/arcCircle.js","order":0,"filename":"arcCircle.js","title":"大圆弧线","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*6Qm_QY69sBMAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"弧线地图","order":601},"en":{"title":"Arc Line Map","order":601}}},{"relativePath":"line/arc/demo/trip_arc.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/arc/demo/trip_arc.js","order":2,"filename":"trip_arc.js","title":"3D 弧线","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*xvaaQo2c0gMAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"弧线地图","order":601},"en":{"title":"Arc Line Map","order":601}}},{"relativePath":"line/arc/demo/trip_arc_dark.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/arc/demo/trip_arc_dark.js","order":1,"filename":"trip_arc_dark.js","title":"3D 弧线","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*JjUcTZ8-PC8AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"弧线地图","order":601},"en":{"title":"Arc Line Map","order":601}}},{"relativePath":"line/animate/demo/arcCircle.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/animate/demo/arcCircle.js","order":1,"filename":"arcCircle.js","title":"大圆弧线","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*6Qm_QY69sBMAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"线动画","order":601},"en":{"title":"Line Animate","order":601}}},{"relativePath":"line/animate/demo/trip_arc.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/animate/demo/trip_arc.js","order":3,"filename":"trip_arc.js","title":"3D 弧线","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*xvaaQo2c0gMAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"线动画","order":601},"en":{"title":"Line Animate","order":601}}},{"relativePath":"line/animate/demo/wind.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/animate/demo/wind.js","order":0,"filename":"wind.js","title":"风场弧线","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*LpcBTKiazZcAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"线动画","order":601},"en":{"title":"Line Animate","order":601}}},{"relativePath":"line/animate/demo/trip_arc_dark.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/line/animate/demo/trip_arc_dark.js","order":2,"filename":"trip_arc_dark.js","title":"3D 弧线","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*JjUcTZ8-PC8AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"线动画","order":601},"en":{"title":"Line Animate","order":601}}},{"relativePath":"heatmap/hexagon/demo/china.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/heatmap/hexagon/demo/china.js","order":0,"filename":"china.js","title":"蜂窝热力图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*hLVeSqPl9asAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Hexagon Map","order":801},"zh":{"title":"蜂窝热力图","order":801}}},{"relativePath":"heatmap/hexagon/demo/hexagon.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/heatmap/hexagon/demo/hexagon.js","order":2,"filename":"hexagon.js","title":"蜂窝热力图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*JBibTKlhhWQAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Hexagon Map","order":801},"zh":{"title":"蜂窝热力图","order":801}}},{"relativePath":"heatmap/hexagon/demo/light.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/heatmap/hexagon/demo/light.js","order":1,"filename":"light.js","title":"蜂窝热力图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*SLcGSbvZoEwAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Hexagon Map","order":801},"zh":{"title":"蜂窝热力图","order":801}}},{"relativePath":"heatmap/hexagon/demo/world.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/heatmap/hexagon/demo/world.js","order":3,"filename":"world.js","title":"蜂窝热力图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*0uVgSoxXP-cAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Hexagon Map","order":801},"zh":{"title":"蜂窝热力图","order":801}}},{"relativePath":"heatmap/heatmap/demo/heatmap.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/heatmap/heatmap/demo/heatmap.js","order":0,"filename":"heatmap.js","title":"经典热力图2D","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*QstiQq4JBOIAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"HeatMap","order":800},"zh":{"title":"经典热力图","order":800}}},{"relativePath":"heatmap/heatmap/demo/heatmap_purple.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/heatmap/heatmap/demo/heatmap_purple.js","order":1,"filename":"heatmap_purple.js","title":"经典热力图2D","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*GD2bR7pb-yIAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"HeatMap","order":800},"zh":{"title":"经典热力图","order":800}}},{"relativePath":"heatmap/heatmap/demo/heatmap3d.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/heatmap/heatmap/demo/heatmap3d.js","order":2,"filename":"heatmap3d.js","title":"经典热力图3D","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*dmhzTqrHpR4AAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"HeatMap","order":800},"zh":{"title":"经典热力图","order":800}}},{"relativePath":"heatmap/grid/demo/grid1.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/heatmap/grid/demo/grid1.js","order":2,"filename":"grid1.js","title":"","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*Uo9oQolgoxYAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Grid Map","order":801},"zh":{"title":"网格热力图","order":801}}},{"relativePath":"heatmap/grid/demo/china.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/heatmap/grid/demo/china.js","order":1,"filename":"china.js","title":"网格热力图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*XPBuSIPPgsgAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Grid Map","order":801},"zh":{"title":"网格热力图","order":801}}},{"relativePath":"heatmap/grid/demo/grid_world.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/heatmap/grid/demo/grid_world.js","order":0,"filename":"grid_world.js","title":"网格世界地图","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*1PeGSboLGUUAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Grid Map","order":801},"zh":{"title":"网格热力图","order":801}}},{"relativePath":"heatmap/grid/demo/heatmap3.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/heatmap/grid/demo/heatmap3.js","order":3,"filename":"heatmap3.js","title":"网格布局 圆形","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*Ucz6SJ5wU_0AAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Grid Map","order":801},"zh":{"title":"网格热力图","order":801}}},{"relativePath":"heatmap/grid/demo/world.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/heatmap/grid/demo/world.js","order":4,"filename":"world.js","title":"网格热力图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*f1IDQ7AG-00AAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Grid Map","order":801},"zh":{"title":"网格热力图","order":801}}},{"relativePath":"gallery/basic/demo/arcCircle.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/gallery/basic/demo/arcCircle.js","order":1,"filename":"arcCircle.js","title":"弧线地图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*6Qm_QY69sBMAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"基础可视化","order":101},"en":{"title":"Featured","order":101}}},{"relativePath":"gallery/basic/demo/column_dark.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/gallery/basic/demo/column_dark.js","order":0,"filename":"column_dark.js","title":"3D柱图深色","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*7COqR4wCc6QAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"基础可视化","order":101},"en":{"title":"Featured","order":101}}},{"relativePath":"gallery/basic/demo/light.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/gallery/basic/demo/light.js","order":3,"filename":"light.js","title":"蜂窝图3D","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*SLcGSbvZoEwAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"基础可视化","order":101},"en":{"title":"Featured","order":101}}},{"relativePath":"gallery/basic/demo/point.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/gallery/basic/demo/point.js","order":4,"filename":"point.js","title":"海量点","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*ypZCT6pqv84AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"基础可视化","order":101},"en":{"title":"Featured","order":101}}},{"relativePath":"gallery/basic/demo/normal.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/gallery/basic/demo/normal.js","order":5,"filename":"normal.js","title":"亮度图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*xr8BQouXGvoAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"基础可视化","order":101},"en":{"title":"Featured","order":101}}},{"relativePath":"gallery/animate/demo/animate_line.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/gallery/animate/demo/animate_line.js","order":5,"filename":"animate_line.js","title":"轨迹动画","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*jLo0RY0sDG4AAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Animate","order":100},"zh":{"title":"动画","order":100}}},{"relativePath":"gallery/basic/demo/bus_dark.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/gallery/basic/demo/bus_dark.js","order":2,"filename":"bus_dark.js","title":"公交线路深色","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*j-P8RaJMEvAAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"基础可视化","order":101},"en":{"title":"Featured","order":101}}},{"relativePath":"gallery/animate/demo/animate_path.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/gallery/animate/demo/animate_path.js","order":1,"filename":"animate_path.js","title":"路径动画","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*VJX5Qo7ufaAAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Animate","order":100},"zh":{"title":"动画","order":100}}},{"relativePath":"gallery/animate/demo/animate_path_texture.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/gallery/animate/demo/animate_path_texture.js","order":0,"filename":"animate_path_texture.js","title":"路径贴图","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*0UrUTakTFQsAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Animate","order":100},"zh":{"title":"动画","order":100}}},{"relativePath":"gallery/animate/demo/build.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/gallery/animate/demo/build.js","order":4,"filename":"build.js","title":"点亮城市","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*7XkWTYQMfPMAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Animate","order":100},"zh":{"title":"动画","order":100}}},{"relativePath":"gallery/animate/demo/world2.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/gallery/animate/demo/world2.js","order":3,"filename":"world2.js","title":"流向图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*u5BsQbn30pkAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Animate","order":100},"zh":{"title":"动画","order":100}}},{"relativePath":"gallery/animate/demo/world.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/gallery/animate/demo/world.js","order":2,"filename":"world.js","title":"流向图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*Sbx4S4w7nL8AAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"Animate","order":100},"zh":{"title":"动画","order":100}}},{"relativePath":"draw/basic/demo/draw_circle.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/draw/basic/demo/draw_circle.js","order":0,"filename":"draw_circle.js","title":"绘制圆","screenshot":"https://gw.alipayobjects.com/mdn/rms_8e1672/afts/img/A*pawjTqbwM4gAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"L7 Draw","order":403},"zh":{"title":"绘制组件","order":403}}},{"relativePath":"draw/basic/demo/draw_polygon.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/draw/basic/demo/draw_polygon.js","order":1,"filename":"draw_polygon.js","title":"绘制多边形","screenshot":"https://gw.alipayobjects.com/mdn/rms_8e1672/afts/img/A*m1eqS4gwgz4AAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"L7 Draw","order":403},"zh":{"title":"绘制组件","order":403}}},{"relativePath":"draw/UI/demo/amap.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/draw/UI/demo/amap.js","order":0,"filename":"amap.js","title":"高德地图绘制","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*nMVTRY3xCuoAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"UI 控件","order":403},"en":{"title":"Draw Control","order":403}}},{"relativePath":"draw/UI/demo/mapbox.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/draw/UI/demo/mapbox.js","order":1,"filename":"mapbox.js","title":"Mapbox 地图绘制","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*oX9uTpfcIJ4AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"UI 控件","order":403},"en":{"title":"Draw Control","order":403}}},{"relativePath":"district/react/demo/city.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/react/demo/city.tsx","order":1,"filename":"city.tsx","title":"市级地图切换","screenshot":"https://gw.alipayobjects.com/mdn/rms_8e1672/afts/img/A*Q7-tSpvgHjcAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"React","order":303},"zh":{"title":"React 组件","order":304}}},{"relativePath":"district/react/demo/county.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/react/demo/county.tsx","order":2,"filename":"county.tsx","title":"县地图切换","screenshot":"https://gw.alipayobjects.com/mdn/rms_8e1672/afts/img/A*pBaIQo9D50YAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"React","order":303},"zh":{"title":"React 组件","order":304}}},{"relativePath":"district/react/demo/province.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/react/demo/province.tsx","order":0,"filename":"province.tsx","title":"省级地图切换","screenshot":"https://gw.alipayobjects.com/mdn/rms_8e1672/afts/img/A*LZAZSYFf0-MAAAAAAAAAAABkARQnAQ","postFrontmatter":{"en":{"title":"React","order":303},"zh":{"title":"React 组件","order":304}}},{"relativePath":"district/drill/demo/drill_down_bubble.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/drill/demo/drill_down_bubble.js","order":3,"filename":"drill_down_bubble.js","title":"中国地图钻取气泡图","screenshot":"https://gw.alipayobjects.com/mdn/rms_b82228/afts/img/A*opUFTqjO9YgAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"钻取地图","order":303},"en":{"title":"Drill Down","order":300}}},{"relativePath":"district/drill/demo/drill_down.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/drill/demo/drill_down.js","order":0,"filename":"drill_down.js","title":"中国地图钻取","screenshot":"https://gw.alipayobjects.com/mdn/rms_8e1672/afts/img/A*xjjARqU70xoAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"钻取地图","order":303},"en":{"title":"Drill Down","order":300}}},{"relativePath":"district/drill/demo/drill_down_view.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/drill/demo/drill_down_view.js","order":1,"filename":"drill_down_view.js","title":"中国地图钻取","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*KphnSq_0C6sAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"钻取地图","order":303},"en":{"title":"Drill Down","order":300}}},{"relativePath":"district/drill/demo/drill_down_province.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/drill/demo/drill_down_province.js","order":2,"filename":"drill_down_province.js","title":"省级地图钻取","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*fVHISrzrz44AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"钻取地图","order":303},"en":{"title":"Drill Down","order":300}}},{"relativePath":"district/bubble/demo/china_bubble.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/bubble/demo/china_bubble.js","order":0,"filename":"china_bubble.js","title":"中国地图气泡图","screenshot":"https://gw.alipayobjects.com/mdn/rms_b82228/afts/img/A*U86gSZpLV54AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"气泡图","order":302},"en":{"title":"Bubbled","order":300}}},{"relativePath":"district/bubble/demo/city.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/bubble/demo/city.js","order":3,"filename":"city.js","title":"中国市地图气泡","screenshot":"https://gw.alipayobjects.com/mdn/rms_b82228/afts/img/A*usBDQ4cHxtsAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"气泡图","order":302},"en":{"title":"Bubbled","order":300}}},{"relativePath":"district/bubble/demo/county.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/bubble/demo/county.js","order":4,"filename":"county.js","title":"中国县地图气泡","screenshot":"https://gw.alipayobjects.com/mdn/rms_b82228/afts/img/A*0p7aSJ8AXoMAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"气泡图","order":302},"en":{"title":"Bubbled","order":300}}},{"relativePath":"district/bubble/demo/province.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/bubble/demo/province.js","order":2,"filename":"province.js","title":"中国省级地图气泡","screenshot":"https://gw.alipayobjects.com/mdn/rms_b82228/afts/img/A*wS2QRa4kPTAAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"气泡图","order":302},"en":{"title":"Bubbled","order":300}}},{"relativePath":"district/bubble/demo/world_map.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/bubble/demo/world_map.js","order":1,"filename":"world_map.js","title":"世界地图气泡","screenshot":"https://gw.alipayobjects.com/mdn/rms_b82228/afts/img/A*jljdRbDWNIgAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"气泡图","order":302},"en":{"title":"Bubbled","order":300}}},{"relativePath":"district/basic/demo/china_map_2.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/basic/demo/china_map_2.js","order":0,"filename":"china_map_2.js","title":"中国地图","screenshot":"https://gw.alipayobjects.com/mdn/rms_8e1672/afts/img/A*tClNQoAo5isAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"填充图","order":301},"en":{"title":"L7 District","order":300}}},{"relativePath":"district/basic/demo/attach_map.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/basic/demo/attach_map.js","order":5,"filename":"attach_map.js","title":"中国地图附图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*bGX-Tbw5uVAAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"填充图","order":301},"en":{"title":"L7 District","order":300}}},{"relativePath":"district/basic/demo/county.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/basic/demo/county.js","order":4,"filename":"county.js","title":"中国县地图","screenshot":"https://gw.alipayobjects.com/mdn/rms_8e1672/afts/img/A*iVwLSpIf_ckAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"填充图","order":301},"en":{"title":"L7 District","order":300}}},{"relativePath":"district/basic/demo/city.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/basic/demo/city.js","order":3,"filename":"city.js","title":"中国市地图","screenshot":"https://gw.alipayobjects.com/mdn/rms_8e1672/afts/img/A*C_y8Tr0V8GIAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"填充图","order":301},"en":{"title":"L7 District","order":300}}},{"relativePath":"district/basic/demo/province.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/basic/demo/province.js","order":2,"filename":"province.js","title":"中国省级地图","screenshot":"https://gw.alipayobjects.com/mdn/rms_8e1672/afts/img/A*eVVcRaCBkdYAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"填充图","order":301},"en":{"title":"L7 District","order":300}}},{"relativePath":"district/basic/demo/world_map.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/basic/demo/world_map.js","order":1,"filename":"world_map.js","title":"世界地图","screenshot":"https://gw.alipayobjects.com/mdn/rms_8e1672/afts/img/A*EtRFRYyGs98AAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"填充图","order":301},"en":{"title":"L7 District","order":300}}},{"relativePath":"district/basic/demo/hainan.js","absolutePath":"/Users/yiqianyao/workspace/L7/examples/district/basic/demo/hainan.js","order":6,"filename":"hainan.js","title":"海南省地图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*nHOTQ61hFbYAAAAAAAAAAABkARQnAQ","postFrontmatter":{"zh":{"title":"填充图","order":301},"en":{"title":"L7 District","order":300}}}],"exampleSections":{"examples":[{"relativePath":"react/covid/demo/covid_grid.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/covid/demo/covid_grid.tsx","order":0,"filename":"covid_grid.tsx","title":"世界地图网格背景","screenshot":"https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*CSUXTIYXXFwAAAAAAAAAAABkARQnAQ","source":"import {\n  HeatmapLayer,\n  LayerEvent,\n  LineLayer,\n  MapboxScene,\n  Marker,\n  PointLayer,\n  PolygonLayer,\n  Popup,\n} from '@antv/l7-react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nconst colors =\n ['#f7fcf0','#e0f3db','#ccebc5','#a8ddb5','#7bccc4','#4eb3d3','#2b8cbe','#08589e'].reverse();\nfunction joinData(geodata: any, ncovData: any) {\n  const ncovDataObj: any = {};\n  ncovData.forEach((item: any) => {\n    const {\n      countryName,\n      countryEnglishName,\n      currentConfirmedCount,\n      confirmedCount,\n      suspectedCount,\n      curedCount,\n      deadCount,\n    } = item;\n    if (countryName === '中国') {\n      if (!ncovDataObj[countryName]) {\n        ncovDataObj[countryName] = {\n          countryName,\n          countryEnglishName,\n          currentConfirmedCount: 0,\n          confirmedCount: 0,\n          suspectedCount: 0,\n          curedCount: 0,\n          deadCount: 0,\n        };\n      } else {\n        ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n        ncovDataObj[countryName].confirmedCount += confirmedCount;\n        ncovDataObj[countryName].suspectedCount += suspectedCount;\n        ncovDataObj[countryName].curedCount += curedCount;\n        ncovDataObj[countryName].deadCount += deadCount;\n      }\n    } else {\n      ncovDataObj[countryName] = {\n        countryName,\n        countryEnglishName,\n        currentConfirmedCount,\n        confirmedCount,\n        suspectedCount,\n        curedCount,\n        deadCount,\n      };\n    }\n  });\n  const geoObj: any = {};\n  geodata.features.forEach((feature: any) => {\n    const { name } = feature.properties;\n    geoObj[name] = feature.properties;\n    const ncov = ncovDataObj[name] || {};\n    feature.properties = {\n      ...feature.properties,\n      ...ncov,\n    };\n  });\n  return geodata;\n}\n\nconst World = React.memo(function Map() {\n  const [data, setData] = React.useState();\n  const [filldata, setfillData] = React.useState();\n  const [popupInfo, setPopupInfo] = React.useState<{\n    lnglat: number[];\n    feature: any;\n  }>();\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const [geoData, ncovData, gridData] = await Promise.all([\n        fetch(\n          'https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json',\n        ).then((d) => d.json()),\n        // https://lab.isaaclin.cn/nCoV/api/area?latest=1\n        fetch(\n          'https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json',\n        ).then((d) => d.json()),\n        fetch(\n          'https://gw.alipayobjects.com/os/bmw-prod/8990e8b4-c58e-419b-afb9-8ea3daff2dd1.json',\n        ).then((d) => d.json()),\n      ]);\n      const worldData = joinData(geoData, ncovData.results);\n      const pointdata = worldData.features.map((feature: any) => {\n        return feature.properties;\n      });\n      setfillData(gridData);\n      setData(pointdata);\n    };\n    fetchData();\n  }, []);\n  function showPopup(args: any): void {\n    setPopupInfo({\n      lnglat: args.lngLat,\n      feature: args.feature,\n    });\n  }\n\n  return (\n    <>\n      <MapboxScene\n        map={{\n          center: [110.19382669582967, 50.258134],\n          pitch: 0,\n          style: 'blank',\n          zoom: 1,\n        }}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n      >\n        {popupInfo && (\n          <Popup lnglat={popupInfo.lnglat}>\n            {popupInfo.feature.name}\n            <ul\n              style={{\n                margin: 0,\n              }}\n            >\n              <li>现有确诊:{popupInfo.feature.currentConfirmedCount}</li>\n              <li>累计确诊:{popupInfo.feature.confirmedCount}</li>\n              <li>治愈:{popupInfo.feature.curedCount}</li>\n              <li>死亡:{popupInfo.feature.deadCount}</li>\n            </ul>\n          </Popup>\n        )}\n        {data && [\n          <HeatmapLayer\n            key={'1'}\n            source={{\n              data: filldata,\n              transforms: [\n                {\n                  type: 'hexagon',\n                  size: 500000,\n                  field: 'capacity',\n                  method: 'sum',\n                },\n              ],\n            }}\n            color={{\n              values: 'rgb(221,230,238)',\n            }}\n            shape={{\n              values: 'hexagon',\n            }}\n            style={{\n              coverage: 0.7,\n              angle: 0.3,\n              opacity: 0.8,\n            }}\n          />,\n          <PointLayer\n            key={'2'}\n            options={{\n              autoFit: true,\n            }}\n            source={{\n              data,\n              parser: {\n                type: 'json',\n                coordinates: 'centroid',\n              },\n            }}\n            scale={{\n              values: {\n                confirmedCount: {\n                  type: 'log',\n                },\n              },\n            }}\n            color={{\n              field: 'confirmedCount',\n              values: (count) => {\n                return count > 10000\n                  ? colors[6]\n                  : count > 1000\n                  ? colors[5]\n                  : count > 500\n                  ? colors[4]\n                  : count > 100\n                  ? colors[3]\n                  : count > 10\n                  ? colors[2]\n                  : count > 1\n                  ? colors[1]\n                  : colors[0];\n              },\n            }}\n            shape={{\n              values: 'circle',\n            }}\n            active={{\n              option: {\n                color: '#0c2c84',\n              },\n            }}\n            size={{\n              field: 'confirmedCount',\n              values: [0, 20],\n            }}\n            style={{\n              opacity: 0.6,\n            }}\n          >\n            <LayerEvent type=\"mousemove\" handler={showPopup} />\n          </PointLayer>,\n        ]}\n      </MapboxScene>\n    </>\n  );\n});\nReactDOM.render(<World />, document.getElementById('map'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7-react\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7-react\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7React, global.react, global.reactDom);\n    global.covid_grid = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7React, React, _reactDom) {\n  \"use strict\";\n\n  React = _interopRequireWildcard(React);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var colors = ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#08589e'].reverse();\n\n  function joinData(geodata, ncovData) {\n    var ncovDataObj = {};\n    ncovData.forEach(function (item) {\n      var countryName = item.countryName,\n          countryEnglishName = item.countryEnglishName,\n          currentConfirmedCount = item.currentConfirmedCount,\n          confirmedCount = item.confirmedCount,\n          suspectedCount = item.suspectedCount,\n          curedCount = item.curedCount,\n          deadCount = item.deadCount;\n\n      if (countryName === '中国') {\n        if (!ncovDataObj[countryName]) {\n          ncovDataObj[countryName] = {\n            countryName: countryName,\n            countryEnglishName: countryEnglishName,\n            currentConfirmedCount: 0,\n            confirmedCount: 0,\n            suspectedCount: 0,\n            curedCount: 0,\n            deadCount: 0\n          };\n        } else {\n          ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n          ncovDataObj[countryName].confirmedCount += confirmedCount;\n          ncovDataObj[countryName].suspectedCount += suspectedCount;\n          ncovDataObj[countryName].curedCount += curedCount;\n          ncovDataObj[countryName].deadCount += deadCount;\n        }\n      } else {\n        ncovDataObj[countryName] = {\n          countryName: countryName,\n          countryEnglishName: countryEnglishName,\n          currentConfirmedCount: currentConfirmedCount,\n          confirmedCount: confirmedCount,\n          suspectedCount: suspectedCount,\n          curedCount: curedCount,\n          deadCount: deadCount\n        };\n      }\n    });\n    var geoObj = {};\n    geodata.features.forEach(function (feature) {\n      var name = feature.properties.name;\n      geoObj[name] = feature.properties;\n      var ncov = ncovDataObj[name] || {};\n      feature.properties = { ...feature.properties,\n        ...ncov\n      };\n    });\n    return geodata;\n  }\n\n  var World = /*#__PURE__*/React.memo(function Map() {\n    var _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        data = _React$useState2[0],\n        setData = _React$useState2[1];\n\n    var _React$useState3 = React.useState(),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        filldata = _React$useState4[0],\n        setfillData = _React$useState4[1];\n\n    var _React$useState5 = React.useState(),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        popupInfo = _React$useState6[0],\n        setPopupInfo = _React$useState6[1];\n\n    React.useEffect(function () {\n      var fetchData = async function fetchData() {\n        var _await$Promise$all = await Promise.all([fetch('https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json').then(function (d) {\n          return d.json();\n        }), // https://lab.isaaclin.cn/nCoV/api/area?latest=1\n        fetch('https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json').then(function (d) {\n          return d.json();\n        }), fetch('https://gw.alipayobjects.com/os/bmw-prod/8990e8b4-c58e-419b-afb9-8ea3daff2dd1.json').then(function (d) {\n          return d.json();\n        })]),\n            _await$Promise$all2 = _slicedToArray(_await$Promise$all, 3),\n            geoData = _await$Promise$all2[0],\n            ncovData = _await$Promise$all2[1],\n            gridData = _await$Promise$all2[2];\n\n        var worldData = joinData(geoData, ncovData.results);\n        var pointdata = worldData.features.map(function (feature) {\n          return feature.properties;\n        });\n        setfillData(gridData);\n        setData(pointdata);\n      };\n\n      fetchData();\n    }, []);\n\n    function showPopup(args) {\n      setPopupInfo({\n        lnglat: args.lngLat,\n        feature: args.feature\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_l7React.MapboxScene, {\n      map: {\n        center: [110.19382669582967, 50.258134],\n        pitch: 0,\n        style: 'blank',\n        zoom: 1\n      },\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    }, popupInfo && /*#__PURE__*/React.createElement(_l7React.Popup, {\n      lnglat: popupInfo.lnglat\n    }, popupInfo.feature.name, /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        margin: 0\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", null, \"\\u73B0\\u6709\\u786E\\u8BCA:\", popupInfo.feature.currentConfirmedCount), /*#__PURE__*/React.createElement(\"li\", null, \"\\u7D2F\\u8BA1\\u786E\\u8BCA:\", popupInfo.feature.confirmedCount), /*#__PURE__*/React.createElement(\"li\", null, \"\\u6CBB\\u6108:\", popupInfo.feature.curedCount), /*#__PURE__*/React.createElement(\"li\", null, \"\\u6B7B\\u4EA1:\", popupInfo.feature.deadCount))), data && [/*#__PURE__*/React.createElement(_l7React.HeatmapLayer, {\n      key: '1',\n      source: {\n        data: filldata,\n        transforms: [{\n          type: 'hexagon',\n          size: 500000,\n          field: 'capacity',\n          method: 'sum'\n        }]\n      },\n      color: {\n        values: 'rgb(221,230,238)'\n      },\n      shape: {\n        values: 'hexagon'\n      },\n      style: {\n        coverage: 0.7,\n        angle: 0.3,\n        opacity: 0.8\n      }\n    }), /*#__PURE__*/React.createElement(_l7React.PointLayer, {\n      key: '2',\n      options: {\n        autoFit: true\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          coordinates: 'centroid'\n        }\n      },\n      scale: {\n        values: {\n          confirmedCount: {\n            type: 'log'\n          }\n        }\n      },\n      color: {\n        field: 'confirmedCount',\n        values: function values(count) {\n          return count > 10000 ? colors[6] : count > 1000 ? colors[5] : count > 500 ? colors[4] : count > 100 ? colors[3] : count > 10 ? colors[2] : count > 1 ? colors[1] : colors[0];\n        }\n      },\n      shape: {\n        values: 'circle'\n      },\n      active: {\n        option: {\n          color: '#0c2c84'\n        }\n      },\n      size: {\n        field: 'confirmedCount',\n        values: [0, 20]\n      },\n      style: {\n        opacity: 0.6\n      }\n    }, /*#__PURE__*/React.createElement(_l7React.LayerEvent, {\n      type: \"mousemove\",\n      handler: showPopup\n    }))]));\n  });\n\n  _reactDom.default.render( /*#__PURE__*/React.createElement(World, null), document.getElementById('map'));\n});"},{"relativePath":"react/covid/demo/covid_animate.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/covid/demo/covid_animate.tsx","order":1,"filename":"covid_animate.tsx","title":"气泡动图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*4Er4Qo128bkAAAAAAAAAAABkARQnAQ","source":"import {\n  LayerEvent,\n  LineLayer,\n  MapboxScene,\n  Marker,\n  PointLayer,\n  PolygonLayer,\n  Popup,\n} from '@antv/l7-react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nfunction joinData(geodata: any, ncovData: any) {\n  const ncovDataObj: any = {};\n  ncovData.forEach((item: any) => {\n    const {\n      countryName,\n      countryEnglishName,\n      currentConfirmedCount,\n      confirmedCount,\n      suspectedCount,\n      curedCount,\n      deadCount,\n    } = item;\n    if (countryName === '中国') {\n      if (!ncovDataObj[countryName]) {\n        ncovDataObj[countryName] = {\n          countryName: 0,\n          countryEnglishName,\n          currentConfirmedCount: 0,\n          confirmedCount: 0,\n          suspectedCount: 0,\n          curedCount: 0,\n          deadCount: 0,\n        };\n      } else {\n        ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n        ncovDataObj[countryName].confirmedCount += confirmedCount;\n        ncovDataObj[countryName].suspectedCount += suspectedCount;\n        ncovDataObj[countryName].curedCount += curedCount;\n        ncovDataObj[countryName].deadCount += deadCount;\n      }\n    } else {\n      ncovDataObj[countryName] = {\n        countryName,\n        countryEnglishName,\n        currentConfirmedCount,\n        confirmedCount,\n        suspectedCount,\n        curedCount,\n        deadCount,\n      };\n    }\n  });\n  const geoObj: any = {};\n  geodata.features.forEach((feature: any) => {\n    const { name } = feature.properties;\n    geoObj[name] = feature.properties;\n    const ncov = ncovDataObj[name] || {};\n    feature.properties = {\n      ...feature.properties,\n      ...ncov,\n    };\n  });\n  return geodata;\n}\n\nconst World = React.memo(function Map() {\n  const [data, setData] = React.useState();\n  const [filldata, setfillData] = React.useState();\n  const [popupInfo, setPopupInfo] = React.useState<{\n    lnglat: number[];\n    feature: any;\n  }>();\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const [geoData, ncovData] = await Promise.all([\n        fetch(\n          'https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json',\n        ).then((d) => d.json()),\n        // https://lab.isaaclin.cn/nCoV/api/area?latest=1\n        fetch(\n          'https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json',\n        ).then((d) => d.json()),\n      ]);\n      const worldData = joinData(geoData, ncovData.results);\n      const pointdata = worldData.features.map((feature: any) => {\n        return feature.properties;\n      });\n      setfillData(worldData);\n      setData(pointdata);\n    };\n    fetchData();\n  }, []);\n  function showPopup(args: any): void {\n    setPopupInfo({\n      lnglat: args.lngLat,\n      feature: args.feature,\n    });\n  }\n\n  return (\n    <>\n      <MapboxScene\n        map={{\n          center: [110.19382669582967, 50.258134],\n          pitch: 0,\n          style: 'blank',\n          zoom: 1,\n        }}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n      >\n        {popupInfo && (\n          <Popup lnglat={popupInfo.lnglat}>\n            {popupInfo.feature.name}\n            <ul\n              style={{\n                margin: 0,\n              }}\n            >\n              <li>现有确诊:{popupInfo.feature.currentConfirmedCount}</li>\n              <li>累计确诊:{popupInfo.feature.confirmedCount}</li>\n              <li>治愈:{popupInfo.feature.curedCount}</li>\n              <li>死亡:{popupInfo.feature.deadCount}</li>\n            </ul>\n          </Popup>\n        )}\n        {data && [\n          <PolygonLayer\n            key={'1'}\n            options={{\n              autoFit: false,\n            }}\n            source={{\n              data: filldata,\n            }}\n            scale={{\n              values: {\n                confirmedCount: {\n                  type: 'quantile',\n                },\n              },\n            }}\n            color={{\n              values: '#ddd',\n            }}\n            shape={{\n              values: 'fill',\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n          <LineLayer\n            key={'3'}\n            source={{\n              data: filldata,\n            }}\n            size={{\n              values: 0.6,\n            }}\n            color={{\n              values: '#fff',\n            }}\n            shape={{\n              values: 'line',\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n          <PointLayer\n            key={'2'}\n            options={{\n              autoFit: true,\n            }}\n            source={{\n              data,\n              parser: {\n                type: 'json',\n                coordinates: 'centroid',\n              },\n            }}\n            scale={{\n              values: {\n                confirmedCount: {\n                  type: 'log',\n                },\n              },\n            }}\n            color={{\n              values: '#b10026',\n            }}\n            shape={{\n              values: 'circle',\n            }}\n            active={{\n              option: {\n                color: '#0c2c84',\n              },\n            }}\n            size={{\n              field: 'confirmedCount',\n              values: [5, 60],\n            }}\n            animate={{\n              enable: true,\n            }}\n            style={{\n              opacity: 0.6,\n            }}\n          >\n            <LayerEvent type=\"mousemove\" handler={showPopup} />\n          </PointLayer>,\n        ]}\n      </MapboxScene>\n    </>\n  );\n});\nReactDOM.render(<World />, document.getElementById('map'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7-react\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7-react\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7React, global.react, global.reactDom);\n    global.covid_animate = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7React, React, _reactDom) {\n  \"use strict\";\n\n  React = _interopRequireWildcard(React);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  function joinData(geodata, ncovData) {\n    var ncovDataObj = {};\n    ncovData.forEach(function (item) {\n      var countryName = item.countryName,\n          countryEnglishName = item.countryEnglishName,\n          currentConfirmedCount = item.currentConfirmedCount,\n          confirmedCount = item.confirmedCount,\n          suspectedCount = item.suspectedCount,\n          curedCount = item.curedCount,\n          deadCount = item.deadCount;\n\n      if (countryName === '中国') {\n        if (!ncovDataObj[countryName]) {\n          ncovDataObj[countryName] = {\n            countryName: 0,\n            countryEnglishName: countryEnglishName,\n            currentConfirmedCount: 0,\n            confirmedCount: 0,\n            suspectedCount: 0,\n            curedCount: 0,\n            deadCount: 0\n          };\n        } else {\n          ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n          ncovDataObj[countryName].confirmedCount += confirmedCount;\n          ncovDataObj[countryName].suspectedCount += suspectedCount;\n          ncovDataObj[countryName].curedCount += curedCount;\n          ncovDataObj[countryName].deadCount += deadCount;\n        }\n      } else {\n        ncovDataObj[countryName] = {\n          countryName: countryName,\n          countryEnglishName: countryEnglishName,\n          currentConfirmedCount: currentConfirmedCount,\n          confirmedCount: confirmedCount,\n          suspectedCount: suspectedCount,\n          curedCount: curedCount,\n          deadCount: deadCount\n        };\n      }\n    });\n    var geoObj = {};\n    geodata.features.forEach(function (feature) {\n      var name = feature.properties.name;\n      geoObj[name] = feature.properties;\n      var ncov = ncovDataObj[name] || {};\n      feature.properties = { ...feature.properties,\n        ...ncov\n      };\n    });\n    return geodata;\n  }\n\n  var World = /*#__PURE__*/React.memo(function Map() {\n    var _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        data = _React$useState2[0],\n        setData = _React$useState2[1];\n\n    var _React$useState3 = React.useState(),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        filldata = _React$useState4[0],\n        setfillData = _React$useState4[1];\n\n    var _React$useState5 = React.useState(),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        popupInfo = _React$useState6[0],\n        setPopupInfo = _React$useState6[1];\n\n    React.useEffect(function () {\n      var fetchData = async function fetchData() {\n        var _await$Promise$all = await Promise.all([fetch('https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json').then(function (d) {\n          return d.json();\n        }), // https://lab.isaaclin.cn/nCoV/api/area?latest=1\n        fetch('https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json').then(function (d) {\n          return d.json();\n        })]),\n            _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2),\n            geoData = _await$Promise$all2[0],\n            ncovData = _await$Promise$all2[1];\n\n        var worldData = joinData(geoData, ncovData.results);\n        var pointdata = worldData.features.map(function (feature) {\n          return feature.properties;\n        });\n        setfillData(worldData);\n        setData(pointdata);\n      };\n\n      fetchData();\n    }, []);\n\n    function showPopup(args) {\n      setPopupInfo({\n        lnglat: args.lngLat,\n        feature: args.feature\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_l7React.MapboxScene, {\n      map: {\n        center: [110.19382669582967, 50.258134],\n        pitch: 0,\n        style: 'blank',\n        zoom: 1\n      },\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    }, popupInfo && /*#__PURE__*/React.createElement(_l7React.Popup, {\n      lnglat: popupInfo.lnglat\n    }, popupInfo.feature.name, /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        margin: 0\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", null, \"\\u73B0\\u6709\\u786E\\u8BCA:\", popupInfo.feature.currentConfirmedCount), /*#__PURE__*/React.createElement(\"li\", null, \"\\u7D2F\\u8BA1\\u786E\\u8BCA:\", popupInfo.feature.confirmedCount), /*#__PURE__*/React.createElement(\"li\", null, \"\\u6CBB\\u6108:\", popupInfo.feature.curedCount), /*#__PURE__*/React.createElement(\"li\", null, \"\\u6B7B\\u4EA1:\", popupInfo.feature.deadCount))), data && [/*#__PURE__*/React.createElement(_l7React.PolygonLayer, {\n      key: '1',\n      options: {\n        autoFit: false\n      },\n      source: {\n        data: filldata\n      },\n      scale: {\n        values: {\n          confirmedCount: {\n            type: 'quantile'\n          }\n        }\n      },\n      color: {\n        values: '#ddd'\n      },\n      shape: {\n        values: 'fill'\n      },\n      style: {\n        opacity: 1\n      }\n    }), /*#__PURE__*/React.createElement(_l7React.LineLayer, {\n      key: '3',\n      source: {\n        data: filldata\n      },\n      size: {\n        values: 0.6\n      },\n      color: {\n        values: '#fff'\n      },\n      shape: {\n        values: 'line'\n      },\n      style: {\n        opacity: 1\n      }\n    }), /*#__PURE__*/React.createElement(_l7React.PointLayer, {\n      key: '2',\n      options: {\n        autoFit: true\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          coordinates: 'centroid'\n        }\n      },\n      scale: {\n        values: {\n          confirmedCount: {\n            type: 'log'\n          }\n        }\n      },\n      color: {\n        values: '#b10026'\n      },\n      shape: {\n        values: 'circle'\n      },\n      active: {\n        option: {\n          color: '#0c2c84'\n        }\n      },\n      size: {\n        field: 'confirmedCount',\n        values: [5, 60]\n      },\n      animate: {\n        enable: true\n      },\n      style: {\n        opacity: 0.6\n      }\n    }, /*#__PURE__*/React.createElement(_l7React.LayerEvent, {\n      type: \"mousemove\",\n      handler: showPopup\n    }))]));\n  });\n\n  _reactDom.default.render( /*#__PURE__*/React.createElement(World, null), document.getElementById('map'));\n});"},{"relativePath":"react/covid/demo/covid_fill.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/covid/demo/covid_fill.tsx","order":2,"filename":"covid_fill.tsx","title":"填充图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*9lzaSrHuYx0AAAAAAAAAAABkARQnAQ","source":"import {\n  LineLayer,\n  MapboxScene,\n  Marker,\n  PolygonLayer,\n  Popup,\n} from '@antv/l7-react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction joinData(geodata: any, ncovData: any) {\n  const ncovDataObj: any = {};\n  ncovData.forEach((item: any) => {\n    const {\n      countryName,\n      countryEnglishName,\n      currentConfirmedCount,\n      confirmedCount,\n      suspectedCount,\n      curedCount,\n      deadCount,\n    } = item;\n    if (countryName === '中国') {\n      if (!ncovDataObj[countryName]) {\n        ncovDataObj[countryName] = {\n          countryName: 0,\n          countryEnglishName,\n          currentConfirmedCount: 0,\n          confirmedCount: 0,\n          suspectedCount: 0,\n          curedCount: 0,\n          deadCount: 0,\n        };\n      } else {\n        ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n        ncovDataObj[countryName].confirmedCount += confirmedCount;\n        ncovDataObj[countryName].suspectedCount += suspectedCount;\n        ncovDataObj[countryName].curedCount += curedCount;\n        ncovDataObj[countryName].deadCount += deadCount;\n      }\n    } else {\n      ncovDataObj[countryName] = {\n        countryName,\n        countryEnglishName,\n        currentConfirmedCount,\n        confirmedCount,\n        suspectedCount,\n        curedCount,\n        deadCount,\n      };\n    }\n  });\n  const geoObj: any = {};\n  geodata.features.forEach((feature: any) => {\n    const { name } = feature.properties;\n    geoObj[name] = feature.properties;\n    const ncov = ncovDataObj[name] || {};\n    feature.properties = {\n      ...feature.properties,\n      ...ncov,\n    };\n  });\n  return geodata;\n}\n\nconst World = React.memo(function Map() {\n  const [data, setData] = React.useState();\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const [geoData, ncovData] = await Promise.all([\n        fetch(\n          'https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json',\n        ).then((d) => d.json()),\n        // https://lab.isaaclin.cn/nCoV/api/area?latest=1\n        fetch(\n          'https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json',\n        ).then((d) => d.json()),\n      ]);\n      setData(joinData(geoData, ncovData.results));\n    };\n    fetchData();\n  }, []);\n  return (\n    <>\n      <MapboxScene\n        map={{\n          center: [110.19382669582967, 50.258134],\n          pitch: 0,\n          style: 'blank',\n          zoom: 1,\n        }}\n        style={{\n          position: 'absolute',\n          background:'#fff', // 地图背景色\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n      >\n        {data && [\n          <PolygonLayer\n            key={'1'}\n            options={{\n              autoFit: true,\n            }}\n            source={{\n              data,\n            }}\n            scale={{\n              values: {\n                confirmedCount: {\n                  type: 'quantile',\n                },\n              },\n            }}\n            active={{\n              option: {\n                color: '#0c2c84',\n              },\n            }}\n            color={{\n              field: 'confirmedCount', // 填充颜色\n              values: [\n                '#732200',\n                '#CC3D00',\n                '#FF6619',\n                '#FF9466',\n                '#FFC1A6',\n                '#FCE2D7',\n              ].reverse()\n            }}\n            shape={{\n              values: 'fill',\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n          <LineLayer\n            key={'2'}\n            source={{\n              data,\n            }}\n            size={{\n              values: 0.6,\n            }}\n            color={{\n              values: '#aaa', // 描边颜色\n            }}\n            shape={{\n              values: 'line',\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n        ]}\n      </MapboxScene>\n    </>\n  );\n});\nReactDOM.render(<World />, document.getElementById('map'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7-react\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7-react\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7React, global.react, global.reactDom);\n    global.covid_fill = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7React, React, _reactDom) {\n  \"use strict\";\n\n  React = _interopRequireWildcard(React);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  function joinData(geodata, ncovData) {\n    var ncovDataObj = {};\n    ncovData.forEach(function (item) {\n      var countryName = item.countryName,\n          countryEnglishName = item.countryEnglishName,\n          currentConfirmedCount = item.currentConfirmedCount,\n          confirmedCount = item.confirmedCount,\n          suspectedCount = item.suspectedCount,\n          curedCount = item.curedCount,\n          deadCount = item.deadCount;\n\n      if (countryName === '中国') {\n        if (!ncovDataObj[countryName]) {\n          ncovDataObj[countryName] = {\n            countryName: 0,\n            countryEnglishName: countryEnglishName,\n            currentConfirmedCount: 0,\n            confirmedCount: 0,\n            suspectedCount: 0,\n            curedCount: 0,\n            deadCount: 0\n          };\n        } else {\n          ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n          ncovDataObj[countryName].confirmedCount += confirmedCount;\n          ncovDataObj[countryName].suspectedCount += suspectedCount;\n          ncovDataObj[countryName].curedCount += curedCount;\n          ncovDataObj[countryName].deadCount += deadCount;\n        }\n      } else {\n        ncovDataObj[countryName] = {\n          countryName: countryName,\n          countryEnglishName: countryEnglishName,\n          currentConfirmedCount: currentConfirmedCount,\n          confirmedCount: confirmedCount,\n          suspectedCount: suspectedCount,\n          curedCount: curedCount,\n          deadCount: deadCount\n        };\n      }\n    });\n    var geoObj = {};\n    geodata.features.forEach(function (feature) {\n      var name = feature.properties.name;\n      geoObj[name] = feature.properties;\n      var ncov = ncovDataObj[name] || {};\n      feature.properties = { ...feature.properties,\n        ...ncov\n      };\n    });\n    return geodata;\n  }\n\n  var World = /*#__PURE__*/React.memo(function Map() {\n    var _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        data = _React$useState2[0],\n        setData = _React$useState2[1];\n\n    React.useEffect(function () {\n      var fetchData = async function fetchData() {\n        var _await$Promise$all = await Promise.all([fetch('https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json').then(function (d) {\n          return d.json();\n        }), // https://lab.isaaclin.cn/nCoV/api/area?latest=1\n        fetch('https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json').then(function (d) {\n          return d.json();\n        })]),\n            _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2),\n            geoData = _await$Promise$all2[0],\n            ncovData = _await$Promise$all2[1];\n\n        setData(joinData(geoData, ncovData.results));\n      };\n\n      fetchData();\n    }, []);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_l7React.MapboxScene, {\n      map: {\n        center: [110.19382669582967, 50.258134],\n        pitch: 0,\n        style: 'blank',\n        zoom: 1\n      },\n      style: {\n        position: 'absolute',\n        background: '#fff',\n        // 地图背景色\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    }, data && [/*#__PURE__*/React.createElement(_l7React.PolygonLayer, {\n      key: '1',\n      options: {\n        autoFit: true\n      },\n      source: {\n        data: data\n      },\n      scale: {\n        values: {\n          confirmedCount: {\n            type: 'quantile'\n          }\n        }\n      },\n      active: {\n        option: {\n          color: '#0c2c84'\n        }\n      },\n      color: {\n        field: 'confirmedCount',\n        // 填充颜色\n        values: ['#732200', '#CC3D00', '#FF6619', '#FF9466', '#FFC1A6', '#FCE2D7'].reverse()\n      },\n      shape: {\n        values: 'fill'\n      },\n      style: {\n        opacity: 1\n      }\n    }), /*#__PURE__*/React.createElement(_l7React.LineLayer, {\n      key: '2',\n      source: {\n        data: data\n      },\n      size: {\n        values: 0.6\n      },\n      color: {\n        values: '#aaa' // 描边颜色\n\n      },\n      shape: {\n        values: 'line'\n      },\n      style: {\n        opacity: 1\n      }\n    })]));\n  });\n\n  _reactDom.default.render( /*#__PURE__*/React.createElement(World, null), document.getElementById('map'));\n});"},{"relativePath":"react/covid/demo/covid_bubble.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/covid/demo/covid_bubble.tsx","order":3,"filename":"covid_bubble.tsx","title":"气泡图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*mAWsSrM52gYAAAAAAAAAAABkARQnAQ","source":"import {\n  LayerEvent,\n  LineLayer,\n  MapboxScene,\n  Marker,\n  PointLayer,\n  PolygonLayer,\n  Popup,\n} from '@antv/l7-react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nconst colors = [\n  '#732200',\n  '#CC3D00',\n  '#FF6619',\n  '#FF9466',\n  '#FFC1A6',\n  '#FCE2D7',\n  '#ffffff',\n].reverse();\nfunction joinData(geodata: any, ncovData: any) {\n  const ncovDataObj: any = {};\n  ncovData.forEach((item: any) => {\n    const {\n      countryName,\n      countryEnglishName,\n      currentConfirmedCount,\n      confirmedCount,\n      suspectedCount,\n      curedCount,\n      deadCount,\n    } = item;\n    if (countryName === '中国') {\n      if (!ncovDataObj[countryName]) {\n        ncovDataObj[countryName] = {\n          countryName,\n          countryEnglishName,\n          currentConfirmedCount: 0,\n          confirmedCount: 0,\n          suspectedCount: 0,\n          curedCount: 0,\n          deadCount: 0,\n        };\n      } else {\n        ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n        ncovDataObj[countryName].confirmedCount += confirmedCount;\n        ncovDataObj[countryName].suspectedCount += suspectedCount;\n        ncovDataObj[countryName].curedCount += curedCount;\n        ncovDataObj[countryName].deadCount += deadCount;\n      }\n    } else {\n      ncovDataObj[countryName] = {\n        countryName,\n        countryEnglishName,\n        currentConfirmedCount,\n        confirmedCount,\n        suspectedCount,\n        curedCount,\n        deadCount,\n      };\n    }\n  });\n  const geoObj: any = {};\n  geodata.features.forEach((feature: any) => {\n    const { name } = feature.properties;\n    geoObj[name] = feature.properties;\n    const ncov = ncovDataObj[name] || {};\n    feature.properties = {\n      ...feature.properties,\n      ...ncov,\n    };\n  });\n  return geodata;\n}\n\nconst World = React.memo(function Map() {\n  const [data, setData] = React.useState();\n  const [filldata, setfillData] = React.useState();\n  const [popupInfo, setPopupInfo] = React.useState<{\n    lnglat: number[];\n    feature: any;\n  }>();\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const [geoData, ncovData] = await Promise.all([\n        fetch(\n          'https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json',\n        ).then((d) => d.json()),\n       // https://lab.isaaclin.cn/nCoV/api/area?latest=1\n       fetch(\n        'https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json',\n      ).then((d) => d.json()),\n      ]);\n      const worldData = joinData(geoData, ncovData.results);\n      const pointdata = worldData.features.map((feature: any) => {\n        return feature.properties;\n      });\n      setfillData(worldData);\n      setData(pointdata);\n    };\n    fetchData();\n  }, []);\n  function showPopup(args: any): void {\n    setPopupInfo({\n      lnglat: args.lngLat,\n      feature: args.feature,\n    });\n  }\n\n  return (\n    <>\n      <MapboxScene\n        map={{\n          center: [110.19382669582967, 50.258134],\n          pitch: 0,\n          style: 'blank',\n          zoom: 1,\n        }}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n      >\n        {popupInfo && (\n          <Popup lnglat={popupInfo.lnglat}>\n            {popupInfo.feature.name}\n            <ul\n              style={{\n                margin: 0,\n              }}\n            >\n              <li>现有确诊:{popupInfo.feature.currentConfirmedCount}</li>\n              <li>累计确诊:{popupInfo.feature.confirmedCount}</li>\n              <li>治愈:{popupInfo.feature.curedCount}</li>\n              <li>死亡:{popupInfo.feature.deadCount}</li>\n            </ul>\n          </Popup>\n        )}\n        {data && [\n          <PolygonLayer\n            key={'1'}\n            options={{\n              autoFit: true,\n            }}\n            source={{\n              data: filldata,\n            }}\n            scale={{\n              values: {\n                confirmedCount: {\n                  type: 'quantile',\n                },\n              },\n            }}\n            color={{\n              values: '#ddd',\n            }}\n            shape={{\n              values: 'fill',\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n          <LineLayer\n            key={'3'}\n            source={{\n              data: filldata,\n            }}\n            size={{\n              values: 0.6,\n            }}\n            color={{\n              values: '#fff',\n            }}\n            shape={{\n              values: 'line',\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n          <PointLayer\n            key={'2'}\n            options={{\n              autoFit: true,\n            }}\n            source={{\n              data,\n              parser: {\n                type: 'json',\n                coordinates: 'centroid',\n              },\n            }}\n            scale={{\n              values: {\n                confirmedCount: {\n                  type: 'log',\n                },\n              },\n            }}\n            color={{\n              field: 'confirmedCount',\n              values: (count) => {\n                return count > 10000\n                  ? colors[6]\n                  : count > 1000\n                  ? colors[5]\n                  : count > 500\n                  ? colors[4]\n                  : count > 100\n                  ? colors[3]\n                  : count > 10\n                  ? colors[2]\n                  : count > 1\n                  ? colors[1]\n                  : colors[0];\n              },\n            }}\n            shape={{\n              values: 'circle',\n            }}\n            active={{\n              option: {\n                color: '#0c2c84',\n              },\n            }}\n            size={{\n              field: 'confirmedCount',\n              values: [0, 30],\n            }}\n            style={{\n              opacity: 0.8,\n            }}\n          >\n            <LayerEvent type=\"mousemove\" handler={showPopup} />\n          </PointLayer>,\n          <PointLayer\n            key={'5'}\n            source={{\n              data,\n              parser: {\n                type: 'json',\n                coordinates: 'centroid',\n              },\n            }}\n            color={{\n              values: '#fff',\n            }}\n            shape={{\n              field: 'countryName',\n              values: 'text',\n            }}\n            filter={{\n              field: 'currentConfirmedCount',\n              values: (v) => {\n                return v > 500;\n              },\n            }}\n            size={{\n              values: 12,\n            }}\n            style={{\n              opacity: 1,\n              strokeOpacity: 1,\n              strokeWidth: 0,\n            }}\n          >\n            <LayerEvent type=\"mousemove\" handler={showPopup} />\n          </PointLayer>,\n        ]}\n      </MapboxScene>\n    </>\n  );\n});\nReactDOM.render(<World />, document.getElementById('map'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7-react\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7-react\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7React, global.react, global.reactDom);\n    global.covid_bubble = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7React, React, _reactDom) {\n  \"use strict\";\n\n  React = _interopRequireWildcard(React);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var colors = ['#732200', '#CC3D00', '#FF6619', '#FF9466', '#FFC1A6', '#FCE2D7', '#ffffff'].reverse();\n\n  function joinData(geodata, ncovData) {\n    var ncovDataObj = {};\n    ncovData.forEach(function (item) {\n      var countryName = item.countryName,\n          countryEnglishName = item.countryEnglishName,\n          currentConfirmedCount = item.currentConfirmedCount,\n          confirmedCount = item.confirmedCount,\n          suspectedCount = item.suspectedCount,\n          curedCount = item.curedCount,\n          deadCount = item.deadCount;\n\n      if (countryName === '中国') {\n        if (!ncovDataObj[countryName]) {\n          ncovDataObj[countryName] = {\n            countryName: countryName,\n            countryEnglishName: countryEnglishName,\n            currentConfirmedCount: 0,\n            confirmedCount: 0,\n            suspectedCount: 0,\n            curedCount: 0,\n            deadCount: 0\n          };\n        } else {\n          ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n          ncovDataObj[countryName].confirmedCount += confirmedCount;\n          ncovDataObj[countryName].suspectedCount += suspectedCount;\n          ncovDataObj[countryName].curedCount += curedCount;\n          ncovDataObj[countryName].deadCount += deadCount;\n        }\n      } else {\n        ncovDataObj[countryName] = {\n          countryName: countryName,\n          countryEnglishName: countryEnglishName,\n          currentConfirmedCount: currentConfirmedCount,\n          confirmedCount: confirmedCount,\n          suspectedCount: suspectedCount,\n          curedCount: curedCount,\n          deadCount: deadCount\n        };\n      }\n    });\n    var geoObj = {};\n    geodata.features.forEach(function (feature) {\n      var name = feature.properties.name;\n      geoObj[name] = feature.properties;\n      var ncov = ncovDataObj[name] || {};\n      feature.properties = { ...feature.properties,\n        ...ncov\n      };\n    });\n    return geodata;\n  }\n\n  var World = /*#__PURE__*/React.memo(function Map() {\n    var _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        data = _React$useState2[0],\n        setData = _React$useState2[1];\n\n    var _React$useState3 = React.useState(),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        filldata = _React$useState4[0],\n        setfillData = _React$useState4[1];\n\n    var _React$useState5 = React.useState(),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        popupInfo = _React$useState6[0],\n        setPopupInfo = _React$useState6[1];\n\n    React.useEffect(function () {\n      var fetchData = async function fetchData() {\n        var _await$Promise$all = await Promise.all([fetch('https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json').then(function (d) {\n          return d.json();\n        }), // https://lab.isaaclin.cn/nCoV/api/area?latest=1\n        fetch('https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json').then(function (d) {\n          return d.json();\n        })]),\n            _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2),\n            geoData = _await$Promise$all2[0],\n            ncovData = _await$Promise$all2[1];\n\n        var worldData = joinData(geoData, ncovData.results);\n        var pointdata = worldData.features.map(function (feature) {\n          return feature.properties;\n        });\n        setfillData(worldData);\n        setData(pointdata);\n      };\n\n      fetchData();\n    }, []);\n\n    function showPopup(args) {\n      setPopupInfo({\n        lnglat: args.lngLat,\n        feature: args.feature\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_l7React.MapboxScene, {\n      map: {\n        center: [110.19382669582967, 50.258134],\n        pitch: 0,\n        style: 'blank',\n        zoom: 1\n      },\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    }, popupInfo && /*#__PURE__*/React.createElement(_l7React.Popup, {\n      lnglat: popupInfo.lnglat\n    }, popupInfo.feature.name, /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        margin: 0\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", null, \"\\u73B0\\u6709\\u786E\\u8BCA:\", popupInfo.feature.currentConfirmedCount), /*#__PURE__*/React.createElement(\"li\", null, \"\\u7D2F\\u8BA1\\u786E\\u8BCA:\", popupInfo.feature.confirmedCount), /*#__PURE__*/React.createElement(\"li\", null, \"\\u6CBB\\u6108:\", popupInfo.feature.curedCount), /*#__PURE__*/React.createElement(\"li\", null, \"\\u6B7B\\u4EA1:\", popupInfo.feature.deadCount))), data && [/*#__PURE__*/React.createElement(_l7React.PolygonLayer, {\n      key: '1',\n      options: {\n        autoFit: true\n      },\n      source: {\n        data: filldata\n      },\n      scale: {\n        values: {\n          confirmedCount: {\n            type: 'quantile'\n          }\n        }\n      },\n      color: {\n        values: '#ddd'\n      },\n      shape: {\n        values: 'fill'\n      },\n      style: {\n        opacity: 1\n      }\n    }), /*#__PURE__*/React.createElement(_l7React.LineLayer, {\n      key: '3',\n      source: {\n        data: filldata\n      },\n      size: {\n        values: 0.6\n      },\n      color: {\n        values: '#fff'\n      },\n      shape: {\n        values: 'line'\n      },\n      style: {\n        opacity: 1\n      }\n    }), /*#__PURE__*/React.createElement(_l7React.PointLayer, {\n      key: '2',\n      options: {\n        autoFit: true\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          coordinates: 'centroid'\n        }\n      },\n      scale: {\n        values: {\n          confirmedCount: {\n            type: 'log'\n          }\n        }\n      },\n      color: {\n        field: 'confirmedCount',\n        values: function values(count) {\n          return count > 10000 ? colors[6] : count > 1000 ? colors[5] : count > 500 ? colors[4] : count > 100 ? colors[3] : count > 10 ? colors[2] : count > 1 ? colors[1] : colors[0];\n        }\n      },\n      shape: {\n        values: 'circle'\n      },\n      active: {\n        option: {\n          color: '#0c2c84'\n        }\n      },\n      size: {\n        field: 'confirmedCount',\n        values: [0, 30]\n      },\n      style: {\n        opacity: 0.8\n      }\n    }, /*#__PURE__*/React.createElement(_l7React.LayerEvent, {\n      type: \"mousemove\",\n      handler: showPopup\n    })), /*#__PURE__*/React.createElement(_l7React.PointLayer, {\n      key: '5',\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          coordinates: 'centroid'\n        }\n      },\n      color: {\n        values: '#fff'\n      },\n      shape: {\n        field: 'countryName',\n        values: 'text'\n      },\n      filter: {\n        field: 'currentConfirmedCount',\n        values: function values(v) {\n          return v > 500;\n        }\n      },\n      size: {\n        values: 12\n      },\n      style: {\n        opacity: 1,\n        strokeOpacity: 1,\n        strokeWidth: 0\n      }\n    }, /*#__PURE__*/React.createElement(_l7React.LayerEvent, {\n      type: \"mousemove\",\n      handler: showPopup\n    }))]));\n  });\n\n  _reactDom.default.render( /*#__PURE__*/React.createElement(World, null), document.getElementById('map'));\n});"},{"relativePath":"react/covid/demo/covid_column.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/covid/demo/covid_column.tsx","order":4,"filename":"covid_column.tsx","title":"3D柱图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*aLV4S6QJ104AAAAAAAAAAABkARQnAQ","source":"import {\n  LineLayer,\n  MapboxScene,\n  Marker,\n  PointLayer,\n  PolygonLayer,\n  Popup,\n} from '@antv/l7-react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nfunction joinData(geodata: any, ncovData: any) {\n  const ncovDataObj: any = {};\n  ncovData.forEach((item: any) => {\n    const {\n      countryName,\n      countryEnglishName,\n      currentConfirmedCount,\n      confirmedCount,\n      suspectedCount,\n      curedCount,\n      deadCount,\n    } = item;\n    if (countryName === '中国') {\n      if (!ncovDataObj[countryName]) {\n        ncovDataObj[countryName] = {\n          countryName: 0,\n          countryEnglishName,\n          currentConfirmedCount: 0,\n          confirmedCount: 0,\n          suspectedCount: 0,\n          curedCount: 0,\n          deadCount: 0,\n        };\n      } else {\n        ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n        ncovDataObj[countryName].confirmedCount += confirmedCount;\n        ncovDataObj[countryName].suspectedCount += suspectedCount;\n        ncovDataObj[countryName].curedCount += curedCount;\n        ncovDataObj[countryName].deadCount += deadCount;\n      }\n    } else {\n      ncovDataObj[countryName] = {\n        countryName,\n        countryEnglishName,\n        currentConfirmedCount,\n        confirmedCount,\n        suspectedCount,\n        curedCount,\n        deadCount,\n      };\n    }\n  });\n  const geoObj: any = {};\n  geodata.features.forEach((feature: any) => {\n    const { name } = feature.properties;\n    geoObj[name] = feature.properties;\n    const ncov = ncovDataObj[name] || {};\n    feature.properties = {\n      ...feature.properties,\n      ...ncov,\n    };\n  });\n  return geodata;\n}\nconst World = React.memo(function Map() {\n  const [data, setData] = React.useState();\n  const [filldata, setfillData] = React.useState();\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const [geoData, ncovData] = await Promise.all([\n        fetch(\n          'https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json',\n        ).then((d) => d.json()),\n        // https://lab.isaaclin.cn/nCoV/api/area?latest=1\n        fetch(\n          'https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json',\n        ).then((d) => d.json()),\n      ]);\n      const worldData = joinData(geoData, ncovData.results);\n      const pointdata = worldData.features.map((feature: any) => {\n        return feature.properties;\n      });\n      setfillData(worldData);\n      setData(pointdata);\n    };\n    fetchData();\n  }, []);\n  return (\n    <>\n      <MapboxScene\n        map={{\n          center: [110.19382669582967, 50.258134],\n          pitch: 50,\n          style: 'blank',\n          zoom: 1,\n        }}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n      >\n        {data && [\n          <PolygonLayer\n            key={'1'}\n            options={{\n              autoFit: true,\n            }}\n            source={{\n              data: filldata,\n            }}\n            scale={{\n              values: {\n                confirmedCount: {\n                  type: 'quantile',\n                },\n              },\n            }}\n            color={{\n              values: '#ddd',\n            }}\n            shape={{\n              values: 'fill',\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n          <LineLayer\n            key={'3'}\n            source={{\n              data: filldata,\n            }}\n            size={{\n              values: 0.6,\n            }}\n            color={{\n              values: '#fff',\n            }}\n            shape={{\n              values: 'line',\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n          <PointLayer\n            key={'2'}\n            options={{\n              autoFit: true,\n            }}\n            source={{\n              data,\n              parser: {\n                type: 'json',\n                coordinates: 'centroid',\n              },\n            }}\n            scale={{\n              values: {\n                confirmedCount: {\n                  type: 'log',\n                },\n              },\n            }}\n            active={{\n              option: {\n                color: '#0c2c84',\n              },\n            }}\n            color={{\n              field: 'confirmedCount',\n              values: (count) => {\n                return count > 10000\n                  ? '#732200'\n                  : count > 1000\n                  ? '#CC3D00'\n                  : count > 500\n                  ? '#FF6619'\n                  : count > 100\n                  ? '#FF9466'\n                  : count > 10\n                  ? '#FFC1A6'\n                  : count > 1\n                  ? '#FCE2D7'\n                  : 'rgb(255,255,255)';\n              },\n            }}\n            shape={{\n              values: 'cylinder',\n            }}\n            size={{\n              field: 'confirmedCount',\n              values: (count: number) => {\n                const height =\n                  count > 10000\n                    ? 70\n                    : count > 1000\n                    ? 40\n                    : count > 500\n                    ? 30\n                    : count > 100\n                    ? 20\n                    : count > 10\n                    ? 10\n                    : count > 1\n                    ? 5\n                    : 1;\n                return [5, 5, height];\n              },\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n        ]}\n      </MapboxScene>\n    </>\n  );\n});\n\nReactDOM.render(<World />, document.getElementById('map'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7-react\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7-react\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7React, global.react, global.reactDom);\n    global.covid_column = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7React, React, _reactDom) {\n  \"use strict\";\n\n  React = _interopRequireWildcard(React);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  function joinData(geodata, ncovData) {\n    var ncovDataObj = {};\n    ncovData.forEach(function (item) {\n      var countryName = item.countryName,\n          countryEnglishName = item.countryEnglishName,\n          currentConfirmedCount = item.currentConfirmedCount,\n          confirmedCount = item.confirmedCount,\n          suspectedCount = item.suspectedCount,\n          curedCount = item.curedCount,\n          deadCount = item.deadCount;\n\n      if (countryName === '中国') {\n        if (!ncovDataObj[countryName]) {\n          ncovDataObj[countryName] = {\n            countryName: 0,\n            countryEnglishName: countryEnglishName,\n            currentConfirmedCount: 0,\n            confirmedCount: 0,\n            suspectedCount: 0,\n            curedCount: 0,\n            deadCount: 0\n          };\n        } else {\n          ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n          ncovDataObj[countryName].confirmedCount += confirmedCount;\n          ncovDataObj[countryName].suspectedCount += suspectedCount;\n          ncovDataObj[countryName].curedCount += curedCount;\n          ncovDataObj[countryName].deadCount += deadCount;\n        }\n      } else {\n        ncovDataObj[countryName] = {\n          countryName: countryName,\n          countryEnglishName: countryEnglishName,\n          currentConfirmedCount: currentConfirmedCount,\n          confirmedCount: confirmedCount,\n          suspectedCount: suspectedCount,\n          curedCount: curedCount,\n          deadCount: deadCount\n        };\n      }\n    });\n    var geoObj = {};\n    geodata.features.forEach(function (feature) {\n      var name = feature.properties.name;\n      geoObj[name] = feature.properties;\n      var ncov = ncovDataObj[name] || {};\n      feature.properties = { ...feature.properties,\n        ...ncov\n      };\n    });\n    return geodata;\n  }\n\n  var World = /*#__PURE__*/React.memo(function Map() {\n    var _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        data = _React$useState2[0],\n        setData = _React$useState2[1];\n\n    var _React$useState3 = React.useState(),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        filldata = _React$useState4[0],\n        setfillData = _React$useState4[1];\n\n    React.useEffect(function () {\n      var fetchData = async function fetchData() {\n        var _await$Promise$all = await Promise.all([fetch('https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json').then(function (d) {\n          return d.json();\n        }), // https://lab.isaaclin.cn/nCoV/api/area?latest=1\n        fetch('https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json').then(function (d) {\n          return d.json();\n        })]),\n            _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2),\n            geoData = _await$Promise$all2[0],\n            ncovData = _await$Promise$all2[1];\n\n        var worldData = joinData(geoData, ncovData.results);\n        var pointdata = worldData.features.map(function (feature) {\n          return feature.properties;\n        });\n        setfillData(worldData);\n        setData(pointdata);\n      };\n\n      fetchData();\n    }, []);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_l7React.MapboxScene, {\n      map: {\n        center: [110.19382669582967, 50.258134],\n        pitch: 50,\n        style: 'blank',\n        zoom: 1\n      },\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    }, data && [/*#__PURE__*/React.createElement(_l7React.PolygonLayer, {\n      key: '1',\n      options: {\n        autoFit: true\n      },\n      source: {\n        data: filldata\n      },\n      scale: {\n        values: {\n          confirmedCount: {\n            type: 'quantile'\n          }\n        }\n      },\n      color: {\n        values: '#ddd'\n      },\n      shape: {\n        values: 'fill'\n      },\n      style: {\n        opacity: 1\n      }\n    }), /*#__PURE__*/React.createElement(_l7React.LineLayer, {\n      key: '3',\n      source: {\n        data: filldata\n      },\n      size: {\n        values: 0.6\n      },\n      color: {\n        values: '#fff'\n      },\n      shape: {\n        values: 'line'\n      },\n      style: {\n        opacity: 1\n      }\n    }), /*#__PURE__*/React.createElement(_l7React.PointLayer, {\n      key: '2',\n      options: {\n        autoFit: true\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          coordinates: 'centroid'\n        }\n      },\n      scale: {\n        values: {\n          confirmedCount: {\n            type: 'log'\n          }\n        }\n      },\n      active: {\n        option: {\n          color: '#0c2c84'\n        }\n      },\n      color: {\n        field: 'confirmedCount',\n        values: function values(count) {\n          return count > 10000 ? '#732200' : count > 1000 ? '#CC3D00' : count > 500 ? '#FF6619' : count > 100 ? '#FF9466' : count > 10 ? '#FFC1A6' : count > 1 ? '#FCE2D7' : 'rgb(255,255,255)';\n        }\n      },\n      shape: {\n        values: 'cylinder'\n      },\n      size: {\n        field: 'confirmedCount',\n        values: function values(count) {\n          var height = count > 10000 ? 70 : count > 1000 ? 40 : count > 500 ? 30 : count > 100 ? 20 : count > 10 ? 10 : count > 1 ? 5 : 1;\n          return [5, 5, height];\n        }\n      },\n      style: {\n        opacity: 1\n      }\n    })]));\n  });\n\n  _reactDom.default.render( /*#__PURE__*/React.createElement(World, null), document.getElementById('map'));\n});"},{"relativePath":"react/covid/demo/covid_extrude.tsx","absolutePath":"/Users/yiqianyao/workspace/L7/examples/react/covid/demo/covid_extrude.tsx","order":5,"filename":"covid_extrude.tsx","title":"3D 填充图","screenshot":"https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*cuMmRqXzQu4AAAAAAAAAAABkARQnAQ","source":"import {\n  LineLayer,\n  MapboxScene,\n  Marker,\n  PolygonLayer,\n  Popup,\n} from '@antv/l7-react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nfunction joinData(geodata: any, ncovData: any) {\n  const ncovDataObj: any = {};\n  ncovData.forEach((item: any) => {\n    const {\n      countryName,\n      countryEnglishName,\n      currentConfirmedCount,\n      confirmedCount,\n      suspectedCount,\n      curedCount,\n      deadCount,\n    } = item;\n    if (countryName === '中国') {\n      if (!ncovDataObj[countryName]) {\n        ncovDataObj[countryName] = {\n          countryName: 0,\n          countryEnglishName,\n          currentConfirmedCount: 0,\n          confirmedCount: 0,\n          suspectedCount: 0,\n          curedCount: 0,\n          deadCount: 0,\n        };\n      } else {\n        ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n        ncovDataObj[countryName].confirmedCount += confirmedCount;\n        ncovDataObj[countryName].suspectedCount += suspectedCount;\n        ncovDataObj[countryName].curedCount += curedCount;\n        ncovDataObj[countryName].deadCount += deadCount;\n      }\n    } else {\n      ncovDataObj[countryName] = {\n        countryName,\n        countryEnglishName,\n        currentConfirmedCount,\n        confirmedCount,\n        suspectedCount,\n        curedCount,\n        deadCount,\n      };\n    }\n  });\n  const geoObj: any = {};\n  geodata.features.forEach((feature: any) => {\n    const { name } = feature.properties;\n    geoObj[name] = feature.properties;\n    const ncov = ncovDataObj[name] || {};\n    feature.properties = {\n      ...feature.properties,\n      ...ncov,\n    };\n  });\n  return geodata;\n}\n\nconst World = React.memo(function Map() {\n  const [data, setData] = React.useState();\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const [geoData, ncovData] = await Promise.all([\n        fetch(\n          'https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json',\n        ).then((d) => d.json()),\n         // https://lab.isaaclin.cn/nCoV/api/area?latest=1\n         fetch(\n          'https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json',\n        ).then((d) => d.json()),\n      ]);\n      setData(joinData(geoData, ncovData.results));\n    };\n    fetchData();\n  }, []);\n  return (\n    <>\n      <MapboxScene\n        map={{\n          center: [110.19382669582967, 50.258134],\n          pitch: 50,\n          style: 'blank',\n          zoom: 1,\n        }}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n      >\n        {data && [\n          <PolygonLayer\n            key={'1'}\n            options={{\n              autoFit: true,\n            }}\n            source={{\n              data,\n            }}\n            scale={{\n              values: {\n                confirmedCount: {\n                  type: 'quantile',\n                },\n              },\n            }}\n            active={{\n              option: {\n                color: '#0c2c84',\n              },\n            }}\n            color={{\n              field: 'confirmedCount',\n              values: (count) => {\n                return count > 10000\n                  ? '#732200'\n                  : count > 1000\n                  ? '#CC3D00'\n                  : count > 500\n                  ? '#FF6619'\n                  : count > 100\n                  ? '#FF9466'\n                  : count > 10\n                  ? '#FFC1A6'\n                  : count > 1\n                  ? '#FCE2D7'\n                  : 'rgb(255,255,255)';\n              },\n            }}\n            shape={{\n              values: 'extrude',\n            }}\n            size={{\n              field: 'confirmedCount',\n              values: [0, 200000, 600000, 800000, 1000000],\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n          <LineLayer\n            key={'2'}\n            source={{\n              data,\n            }}\n            size={{\n              values: 0.6,\n            }}\n            color={{\n              values: '#aaa',\n            }}\n            shape={{\n              values: 'line',\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n        ]}\n      </MapboxScene>\n    </>\n  );\n});\nReactDOM.render(<World />, document.getElementById('map'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7-react\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7-react\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7React, global.react, global.reactDom);\n    global.covid_extrude = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7React, React, _reactDom) {\n  \"use strict\";\n\n  React = _interopRequireWildcard(React);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  function joinData(geodata, ncovData) {\n    var ncovDataObj = {};\n    ncovData.forEach(function (item) {\n      var countryName = item.countryName,\n          countryEnglishName = item.countryEnglishName,\n          currentConfirmedCount = item.currentConfirmedCount,\n          confirmedCount = item.confirmedCount,\n          suspectedCount = item.suspectedCount,\n          curedCount = item.curedCount,\n          deadCount = item.deadCount;\n\n      if (countryName === '中国') {\n        if (!ncovDataObj[countryName]) {\n          ncovDataObj[countryName] = {\n            countryName: 0,\n            countryEnglishName: countryEnglishName,\n            currentConfirmedCount: 0,\n            confirmedCount: 0,\n            suspectedCount: 0,\n            curedCount: 0,\n            deadCount: 0\n          };\n        } else {\n          ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n          ncovDataObj[countryName].confirmedCount += confirmedCount;\n          ncovDataObj[countryName].suspectedCount += suspectedCount;\n          ncovDataObj[countryName].curedCount += curedCount;\n          ncovDataObj[countryName].deadCount += deadCount;\n        }\n      } else {\n        ncovDataObj[countryName] = {\n          countryName: countryName,\n          countryEnglishName: countryEnglishName,\n          currentConfirmedCount: currentConfirmedCount,\n          confirmedCount: confirmedCount,\n          suspectedCount: suspectedCount,\n          curedCount: curedCount,\n          deadCount: deadCount\n        };\n      }\n    });\n    var geoObj = {};\n    geodata.features.forEach(function (feature) {\n      var name = feature.properties.name;\n      geoObj[name] = feature.properties;\n      var ncov = ncovDataObj[name] || {};\n      feature.properties = { ...feature.properties,\n        ...ncov\n      };\n    });\n    return geodata;\n  }\n\n  var World = /*#__PURE__*/React.memo(function Map() {\n    var _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        data = _React$useState2[0],\n        setData = _React$useState2[1];\n\n    React.useEffect(function () {\n      var fetchData = async function fetchData() {\n        var _await$Promise$all = await Promise.all([fetch('https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json').then(function (d) {\n          return d.json();\n        }), // https://lab.isaaclin.cn/nCoV/api/area?latest=1\n        fetch('https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json').then(function (d) {\n          return d.json();\n        })]),\n            _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2),\n            geoData = _await$Promise$all2[0],\n            ncovData = _await$Promise$all2[1];\n\n        setData(joinData(geoData, ncovData.results));\n      };\n\n      fetchData();\n    }, []);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_l7React.MapboxScene, {\n      map: {\n        center: [110.19382669582967, 50.258134],\n        pitch: 50,\n        style: 'blank',\n        zoom: 1\n      },\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    }, data && [/*#__PURE__*/React.createElement(_l7React.PolygonLayer, {\n      key: '1',\n      options: {\n        autoFit: true\n      },\n      source: {\n        data: data\n      },\n      scale: {\n        values: {\n          confirmedCount: {\n            type: 'quantile'\n          }\n        }\n      },\n      active: {\n        option: {\n          color: '#0c2c84'\n        }\n      },\n      color: {\n        field: 'confirmedCount',\n        values: function values(count) {\n          return count > 10000 ? '#732200' : count > 1000 ? '#CC3D00' : count > 500 ? '#FF6619' : count > 100 ? '#FF9466' : count > 10 ? '#FFC1A6' : count > 1 ? '#FCE2D7' : 'rgb(255,255,255)';\n        }\n      },\n      shape: {\n        values: 'extrude'\n      },\n      size: {\n        field: 'confirmedCount',\n        values: [0, 200000, 600000, 800000, 1000000]\n      },\n      style: {\n        opacity: 1\n      }\n    }), /*#__PURE__*/React.createElement(_l7React.LineLayer, {\n      key: '2',\n      source: {\n        data: data\n      },\n      size: {\n        values: 0.6\n      },\n      color: {\n        values: '#aaa'\n      },\n      shape: {\n        values: 'line'\n      },\n      style: {\n        opacity: 1\n      }\n    })]));\n  });\n\n  _reactDom.default.render( /*#__PURE__*/React.createElement(World, null), document.getElementById('map'));\n});"}]},"description":"<p><a href=\"https://github.com/antvis/L7\" target=\"_self\" rel=\"nofollow\"><img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*Nk9mQ48ZoZMAAAAAAAAAAABkARQnAQ\" alt=\"github\"></a></p>"}},"staticQueryHashes":["1976131296","2243448602","3000541721","3000541721","638047554"]}